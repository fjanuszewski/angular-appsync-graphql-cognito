import { __decorate, __metadata } from 'tslib';
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, NgZone, NgModule } from '@angular/core';
import { fromEvent } from 'rxjs';
import { defineCustomElements } from '@aws-amplify/ui-components/loader';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var proxyInputs = (/**
 * @param {?} Cmp
 * @param {?} inputs
 * @return {?}
 */
function (Cmp, inputs) {
    /** @type {?} */
    var Prototype = Cmp.prototype;
    inputs.forEach((/**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        Object.defineProperty(Prototype, item, {
            get: /**
             * @return {?}
             */
            function () { return this.el[item]; },
            set: /**
             * @param {?} val
             * @return {?}
             */
            function (val) {
                var _this = this;
                this.z.runOutsideAngular((/**
                 * @return {?}
                 */
                function () { return (_this.el[item] = val); }));
            }
        });
    }));
});
/** @type {?} */
var proxyMethods = (/**
 * @param {?} Cmp
 * @param {?} methods
 * @return {?}
 */
function (Cmp, methods) {
    /** @type {?} */
    var Prototype = Cmp.prototype;
    methods.forEach((/**
     * @param {?} methodName
     * @return {?}
     */
    function (methodName) {
        Prototype[methodName] = (/**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var args = arguments;
            return this.z.runOutsideAngular((/**
             * @return {?}
             */
            function () { return _this.el[methodName].apply(_this.el, args); }));
        });
    }));
});
/** @type {?} */
var proxyOutputs = (/**
 * @param {?} instance
 * @param {?} el
 * @param {?} events
 * @return {?}
 */
function (instance, el, events) {
    events.forEach((/**
     * @param {?} eventName
     * @return {?}
     */
    function (eventName) { return instance[eventName] = fromEvent(el, eventName); }));
})
// tslint:disable-next-line: only-arrow-functions
;
// tslint:disable-next-line: only-arrow-functions
/**
 * @param {?} opts
 * @return {?}
 */
function ProxyCmp(opts) {
    /** @type {?} */
    var decorator = (/**
     * @param {?} cls
     * @return {?}
     */
    function (cls) {
        if (opts.inputs) {
            proxyInputs(cls, opts.inputs);
        }
        if (opts.methods) {
            proxyMethods(cls, opts.methods);
        }
        return cls;
    });
    return decorator;
}
var AmplifyAmazonButton = /** @class */ (function () {
    function AmplifyAmazonButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyAmazonButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyAmazonButton = __decorate([
        ProxyCmp({ inputs: ['clientId', 'handleAuthStateChange'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyAmazonButton);
AmplifyAmazonButton.ɵfac = function AmplifyAmazonButton_Factory(t) { return new (t || AmplifyAmazonButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyAmazonButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyAmazonButton, selectors: [["amplify-amazon-button"]], inputs: { clientId: "clientId", handleAuthStateChange: "handleAuthStateChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyAmazonButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyAmazonButton, [{
        type: Component,
        args: [{ selector: 'amplify-amazon-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['clientId', 'handleAuthStateChange'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyAmazonButton;
}());
var AmplifyAuthFields = /** @class */ (function () {
    function AmplifyAuthFields(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyAuthFields.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyAuthFields = __decorate([
        ProxyCmp({ inputs: ['formFields'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyAuthFields);
AmplifyAuthFields.ɵfac = function AmplifyAuthFields_Factory(t) { return new (t || AmplifyAuthFields)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyAuthFields.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyAuthFields, selectors: [["amplify-auth-fields"]], inputs: { formFields: "formFields" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyAuthFields_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyAuthFields, [{
        type: Component,
        args: [{ selector: 'amplify-auth-fields', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['formFields'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyAuthFields;
}());
var AmplifyAuth0Button = /** @class */ (function () {
    function AmplifyAuth0Button(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyAuth0Button.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyAuth0Button = __decorate([
        ProxyCmp({ inputs: ['config', 'handleAuthStateChange'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyAuth0Button);
AmplifyAuth0Button.ɵfac = function AmplifyAuth0Button_Factory(t) { return new (t || AmplifyAuth0Button)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyAuth0Button.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyAuth0Button, selectors: [["amplify-auth0-button"]], inputs: { config: "config", handleAuthStateChange: "handleAuthStateChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyAuth0Button_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyAuth0Button, [{
        type: Component,
        args: [{ selector: 'amplify-auth0-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['config', 'handleAuthStateChange'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyAuth0Button;
}());
var AmplifyAuthenticator = /** @class */ (function () {
    function AmplifyAuthenticator(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyAuthenticator.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyAuthenticator = __decorate([
        ProxyCmp({ inputs: ['federated', 'handleAuthStateChange', 'initialAuthState', 'usernameAlias'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyAuthenticator);
AmplifyAuthenticator.ɵfac = function AmplifyAuthenticator_Factory(t) { return new (t || AmplifyAuthenticator)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyAuthenticator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyAuthenticator, selectors: [["amplify-authenticator"]], inputs: { federated: "federated", handleAuthStateChange: "handleAuthStateChange", initialAuthState: "initialAuthState", usernameAlias: "usernameAlias" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyAuthenticator_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyAuthenticator, [{
        type: Component,
        args: [{ selector: 'amplify-authenticator', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['federated', 'handleAuthStateChange', 'initialAuthState', 'usernameAlias'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyAuthenticator;
}());
var AmplifyButton = /** @class */ (function () {
    function AmplifyButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyButton = __decorate([
        ProxyCmp({ inputs: ['disabled', 'handleButtonClick', 'type', 'variant'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyButton);
AmplifyButton.ɵfac = function AmplifyButton_Factory(t) { return new (t || AmplifyButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyButton, selectors: [["amplify-button"]], inputs: { disabled: "disabled", handleButtonClick: "handleButtonClick", type: "type", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyButton, [{
        type: Component,
        args: [{ selector: 'amplify-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['disabled', 'handleButtonClick', 'type', 'variant'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyButton;
}());
var AmplifyCheckbox = /** @class */ (function () {
    function AmplifyCheckbox(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyCheckbox.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyCheckbox = __decorate([
        ProxyCmp({ inputs: ['checked', 'disabled', 'fieldId', 'label', 'name', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyCheckbox);
AmplifyCheckbox.ɵfac = function AmplifyCheckbox_Factory(t) { return new (t || AmplifyCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyCheckbox, selectors: [["amplify-checkbox"]], inputs: { checked: "checked", disabled: "disabled", fieldId: "fieldId", label: "label", name: "name", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyCheckbox_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyCheckbox, [{
        type: Component,
        args: [{ selector: 'amplify-checkbox', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['checked', 'disabled', 'fieldId', 'label', 'name', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyCheckbox;
}());
var AmplifyCodeField = /** @class */ (function () {
    function AmplifyCodeField(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyCodeField.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyCodeField = __decorate([
        ProxyCmp({ inputs: ['disabled', 'fieldId', 'handleInputChange', 'hint', 'inputProps', 'label', 'placeholder', 'required', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyCodeField);
AmplifyCodeField.ɵfac = function AmplifyCodeField_Factory(t) { return new (t || AmplifyCodeField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyCodeField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyCodeField, selectors: [["amplify-code-field"]], inputs: { disabled: "disabled", fieldId: "fieldId", handleInputChange: "handleInputChange", hint: "hint", inputProps: "inputProps", label: "label", placeholder: "placeholder", required: "required", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyCodeField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyCodeField, [{
        type: Component,
        args: [{ selector: 'amplify-code-field', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['disabled', 'fieldId', 'handleInputChange', 'hint', 'inputProps', 'label', 'placeholder', 'required', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyCodeField;
}());
var AmplifyConfirmSignIn = /** @class */ (function () {
    function AmplifyConfirmSignIn(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyConfirmSignIn.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyConfirmSignIn = __decorate([
        ProxyCmp({ inputs: ['formFields', 'handleAuthStateChange', 'handleSubmit', 'headerText', 'submitButtonText', 'user'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyConfirmSignIn);
AmplifyConfirmSignIn.ɵfac = function AmplifyConfirmSignIn_Factory(t) { return new (t || AmplifyConfirmSignIn)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyConfirmSignIn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyConfirmSignIn, selectors: [["amplify-confirm-sign-in"]], inputs: { formFields: "formFields", handleAuthStateChange: "handleAuthStateChange", handleSubmit: "handleSubmit", headerText: "headerText", submitButtonText: "submitButtonText", user: "user" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyConfirmSignIn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyConfirmSignIn, [{
        type: Component,
        args: [{ selector: 'amplify-confirm-sign-in', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['formFields', 'handleAuthStateChange', 'handleSubmit', 'headerText', 'submitButtonText', 'user'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyConfirmSignIn;
}());
var AmplifyConfirmSignUp = /** @class */ (function () {
    function AmplifyConfirmSignUp(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyConfirmSignUp.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyConfirmSignUp = __decorate([
        ProxyCmp({ inputs: ['formFields', 'handleAuthStateChange', 'handleSubmit', 'headerText', 'submitButtonText', 'user', 'usernameAlias'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyConfirmSignUp);
AmplifyConfirmSignUp.ɵfac = function AmplifyConfirmSignUp_Factory(t) { return new (t || AmplifyConfirmSignUp)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyConfirmSignUp.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyConfirmSignUp, selectors: [["amplify-confirm-sign-up"]], inputs: { formFields: "formFields", handleAuthStateChange: "handleAuthStateChange", handleSubmit: "handleSubmit", headerText: "headerText", submitButtonText: "submitButtonText", user: "user", usernameAlias: "usernameAlias" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyConfirmSignUp_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyConfirmSignUp, [{
        type: Component,
        args: [{ selector: 'amplify-confirm-sign-up', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['formFields', 'handleAuthStateChange', 'handleSubmit', 'headerText', 'submitButtonText', 'user', 'usernameAlias'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyConfirmSignUp;
}());
var AmplifyContainer = /** @class */ (function () {
    function AmplifyContainer(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyContainer.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
AmplifyContainer.ɵfac = function AmplifyContainer_Factory(t) { return new (t || AmplifyContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyContainer, selectors: [["amplify-container"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyContainer_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyContainer, [{
        type: Component,
        args: [{ selector: 'amplify-container', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>' }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyContainer;
}());
var AmplifyCountryDialCode = /** @class */ (function () {
    function AmplifyCountryDialCode(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyCountryDialCode.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyCountryDialCode = __decorate([
        ProxyCmp({ inputs: ['fieldId', 'handleInputChange', 'options'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyCountryDialCode);
AmplifyCountryDialCode.ɵfac = function AmplifyCountryDialCode_Factory(t) { return new (t || AmplifyCountryDialCode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyCountryDialCode.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyCountryDialCode, selectors: [["amplify-country-dial-code"]], inputs: { fieldId: "fieldId", handleInputChange: "handleInputChange", options: "options" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyCountryDialCode_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyCountryDialCode, [{
        type: Component,
        args: [{ selector: 'amplify-country-dial-code', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['fieldId', 'handleInputChange', 'options'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyCountryDialCode;
}());
var AmplifyEmailField = /** @class */ (function () {
    function AmplifyEmailField(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyEmailField.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyEmailField = __decorate([
        ProxyCmp({ inputs: ['disabled', 'fieldId', 'handleInputChange', 'inputProps', 'label', 'placeholder', 'required', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyEmailField);
AmplifyEmailField.ɵfac = function AmplifyEmailField_Factory(t) { return new (t || AmplifyEmailField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyEmailField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyEmailField, selectors: [["amplify-email-field"]], inputs: { disabled: "disabled", fieldId: "fieldId", handleInputChange: "handleInputChange", inputProps: "inputProps", label: "label", placeholder: "placeholder", required: "required", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyEmailField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyEmailField, [{
        type: Component,
        args: [{ selector: 'amplify-email-field', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['disabled', 'fieldId', 'handleInputChange', 'inputProps', 'label', 'placeholder', 'required', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyEmailField;
}());
var AmplifyFacebookButton = /** @class */ (function () {
    function AmplifyFacebookButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyFacebookButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyFacebookButton = __decorate([
        ProxyCmp({ inputs: ['appId', 'handleAuthStateChange'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyFacebookButton);
AmplifyFacebookButton.ɵfac = function AmplifyFacebookButton_Factory(t) { return new (t || AmplifyFacebookButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyFacebookButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyFacebookButton, selectors: [["amplify-facebook-button"]], inputs: { appId: "appId", handleAuthStateChange: "handleAuthStateChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyFacebookButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyFacebookButton, [{
        type: Component,
        args: [{ selector: 'amplify-facebook-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['appId', 'handleAuthStateChange'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyFacebookButton;
}());
var AmplifyFederatedButtons = /** @class */ (function () {
    function AmplifyFederatedButtons(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyFederatedButtons.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyFederatedButtons = __decorate([
        ProxyCmp({ inputs: ['authState', 'federated', 'handleAuthStateChange'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyFederatedButtons);
AmplifyFederatedButtons.ɵfac = function AmplifyFederatedButtons_Factory(t) { return new (t || AmplifyFederatedButtons)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyFederatedButtons.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyFederatedButtons, selectors: [["amplify-federated-buttons"]], inputs: { authState: "authState", federated: "federated", handleAuthStateChange: "handleAuthStateChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyFederatedButtons_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyFederatedButtons, [{
        type: Component,
        args: [{ selector: 'amplify-federated-buttons', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['authState', 'federated', 'handleAuthStateChange'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyFederatedButtons;
}());
var AmplifyFederatedSignIn = /** @class */ (function () {
    function AmplifyFederatedSignIn(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyFederatedSignIn.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyFederatedSignIn = __decorate([
        ProxyCmp({ inputs: ['authState', 'federated'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyFederatedSignIn);
AmplifyFederatedSignIn.ɵfac = function AmplifyFederatedSignIn_Factory(t) { return new (t || AmplifyFederatedSignIn)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyFederatedSignIn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyFederatedSignIn, selectors: [["amplify-federated-sign-in"]], inputs: { authState: "authState", federated: "federated" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyFederatedSignIn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyFederatedSignIn, [{
        type: Component,
        args: [{ selector: 'amplify-federated-sign-in', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['authState', 'federated'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyFederatedSignIn;
}());
var AmplifyForgotPassword = /** @class */ (function () {
    function AmplifyForgotPassword(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyForgotPassword.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyForgotPassword = __decorate([
        ProxyCmp({ inputs: ['formFields', 'handleAuthStateChange', 'handleSend', 'handleSubmit', 'headerText', 'submitButtonText', 'usernameAlias'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyForgotPassword);
AmplifyForgotPassword.ɵfac = function AmplifyForgotPassword_Factory(t) { return new (t || AmplifyForgotPassword)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyForgotPassword.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyForgotPassword, selectors: [["amplify-forgot-password"]], inputs: { formFields: "formFields", handleAuthStateChange: "handleAuthStateChange", handleSend: "handleSend", handleSubmit: "handleSubmit", headerText: "headerText", submitButtonText: "submitButtonText", usernameAlias: "usernameAlias" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyForgotPassword_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyForgotPassword, [{
        type: Component,
        args: [{ selector: 'amplify-forgot-password', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['formFields', 'handleAuthStateChange', 'handleSend', 'handleSubmit', 'headerText', 'submitButtonText', 'usernameAlias'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyForgotPassword;
}());
var AmplifyFormField = /** @class */ (function () {
    function AmplifyFormField(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyFormField.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyFormField = __decorate([
        ProxyCmp({ inputs: ['description', 'disabled', 'fieldId', 'handleInputChange', 'hint', 'inputProps', 'label', 'name', 'placeholder', 'required', 'type', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyFormField);
AmplifyFormField.ɵfac = function AmplifyFormField_Factory(t) { return new (t || AmplifyFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyFormField, selectors: [["amplify-form-field"]], inputs: { description: "description", disabled: "disabled", fieldId: "fieldId", handleInputChange: "handleInputChange", hint: "hint", inputProps: "inputProps", label: "label", name: "name", placeholder: "placeholder", required: "required", type: "type", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyFormField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyFormField, [{
        type: Component,
        args: [{ selector: 'amplify-form-field', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['description', 'disabled', 'fieldId', 'handleInputChange', 'hint', 'inputProps', 'label', 'name', 'placeholder', 'required', 'type', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyFormField;
}());
var AmplifyFormSection = /** @class */ (function () {
    function AmplifyFormSection(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyFormSection.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyFormSection = __decorate([
        ProxyCmp({ inputs: ['handleSubmit', 'headerText', 'loading', 'secondaryFooterContent', 'submitButtonText', 'testDataPrefix'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyFormSection);
AmplifyFormSection.ɵfac = function AmplifyFormSection_Factory(t) { return new (t || AmplifyFormSection)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyFormSection.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyFormSection, selectors: [["amplify-form-section"]], inputs: { handleSubmit: "handleSubmit", headerText: "headerText", loading: "loading", secondaryFooterContent: "secondaryFooterContent", submitButtonText: "submitButtonText", testDataPrefix: "testDataPrefix" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyFormSection_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyFormSection, [{
        type: Component,
        args: [{ selector: 'amplify-form-section', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['handleSubmit', 'headerText', 'loading', 'secondaryFooterContent', 'submitButtonText', 'testDataPrefix'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyFormSection;
}());
var AmplifyGoogleButton = /** @class */ (function () {
    function AmplifyGoogleButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyGoogleButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyGoogleButton = __decorate([
        ProxyCmp({ inputs: ['clientId', 'handleAuthStateChange'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyGoogleButton);
AmplifyGoogleButton.ɵfac = function AmplifyGoogleButton_Factory(t) { return new (t || AmplifyGoogleButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyGoogleButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyGoogleButton, selectors: [["amplify-google-button"]], inputs: { clientId: "clientId", handleAuthStateChange: "handleAuthStateChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyGoogleButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyGoogleButton, [{
        type: Component,
        args: [{ selector: 'amplify-google-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['clientId', 'handleAuthStateChange'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyGoogleButton;
}());
var AmplifyGreetings = /** @class */ (function () {
    function AmplifyGreetings(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyGreetings.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyGreetings = __decorate([
        ProxyCmp({ inputs: ['handleAuthStateChange', 'logo', 'username'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyGreetings);
AmplifyGreetings.ɵfac = function AmplifyGreetings_Factory(t) { return new (t || AmplifyGreetings)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyGreetings.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyGreetings, selectors: [["amplify-greetings"]], inputs: { handleAuthStateChange: "handleAuthStateChange", logo: "logo", username: "username" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyGreetings_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyGreetings, [{
        type: Component,
        args: [{ selector: 'amplify-greetings', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['handleAuthStateChange', 'logo', 'username'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyGreetings;
}());
var AmplifyHint = /** @class */ (function () {
    function AmplifyHint(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyHint.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
AmplifyHint.ɵfac = function AmplifyHint_Factory(t) { return new (t || AmplifyHint)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyHint.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyHint, selectors: [["amplify-hint"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyHint_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyHint, [{
        type: Component,
        args: [{ selector: 'amplify-hint', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>' }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyHint;
}());
var AmplifyIcon = /** @class */ (function () {
    function AmplifyIcon(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyIcon.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyIcon = __decorate([
        ProxyCmp({ inputs: ['name'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyIcon);
AmplifyIcon.ɵfac = function AmplifyIcon_Factory(t) { return new (t || AmplifyIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyIcon, selectors: [["amplify-icon"]], inputs: { name: "name" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyIcon_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyIcon, [{
        type: Component,
        args: [{ selector: 'amplify-icon', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['name'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyIcon;
}());
var AmplifyIconButton = /** @class */ (function () {
    function AmplifyIconButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyIconButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyIconButton = __decorate([
        ProxyCmp({ inputs: ['autoShowTooltip', 'name', 'tooltip'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyIconButton);
AmplifyIconButton.ɵfac = function AmplifyIconButton_Factory(t) { return new (t || AmplifyIconButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyIconButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyIconButton, selectors: [["amplify-icon-button"]], inputs: { autoShowTooltip: "autoShowTooltip", name: "name", tooltip: "tooltip" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyIconButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyIconButton, [{
        type: Component,
        args: [{ selector: 'amplify-icon-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['autoShowTooltip', 'name', 'tooltip'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyIconButton;
}());
var AmplifyInput = /** @class */ (function () {
    function AmplifyInput(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['formSubmit']);
    }
    /** @nocollapse */
    AmplifyInput.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyInput = __decorate([
        ProxyCmp({ inputs: ['description', 'disabled', 'fieldId', 'handleInputChange', 'inputProps', 'name', 'placeholder', 'type', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyInput);
AmplifyInput.ɵfac = function AmplifyInput_Factory(t) { return new (t || AmplifyInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyInput.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyInput, selectors: [["amplify-input"]], inputs: { description: "description", disabled: "disabled", fieldId: "fieldId", handleInputChange: "handleInputChange", inputProps: "inputProps", name: "name", placeholder: "placeholder", type: "type", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyInput_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyInput, [{
        type: Component,
        args: [{ selector: 'amplify-input', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['description', 'disabled', 'fieldId', 'handleInputChange', 'inputProps', 'name', 'placeholder', 'type', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyInput;
}());
var AmplifyLabel = /** @class */ (function () {
    function AmplifyLabel(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyLabel.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyLabel = __decorate([
        ProxyCmp({ inputs: ['htmlFor'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyLabel);
AmplifyLabel.ɵfac = function AmplifyLabel_Factory(t) { return new (t || AmplifyLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyLabel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyLabel, selectors: [["amplify-label"]], inputs: { htmlFor: "htmlFor" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyLabel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyLabel, [{
        type: Component,
        args: [{ selector: 'amplify-label', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['htmlFor'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyLabel;
}());
var AmplifyLink = /** @class */ (function () {
    function AmplifyLink(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyLink.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyLink = __decorate([
        ProxyCmp({ inputs: ['role'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyLink);
AmplifyLink.ɵfac = function AmplifyLink_Factory(t) { return new (t || AmplifyLink)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyLink.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyLink, selectors: [["amplify-link"]], inputs: { role: "role" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyLink_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyLink, [{
        type: Component,
        args: [{ selector: 'amplify-link', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['role'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyLink;
}());
var AmplifyLoadingSpinner = /** @class */ (function () {
    function AmplifyLoadingSpinner(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyLoadingSpinner.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
AmplifyLoadingSpinner.ɵfac = function AmplifyLoadingSpinner_Factory(t) { return new (t || AmplifyLoadingSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyLoadingSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyLoadingSpinner, selectors: [["amplify-loading-spinner"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyLoadingSpinner_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyLoadingSpinner, [{
        type: Component,
        args: [{ selector: 'amplify-loading-spinner', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>' }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyLoadingSpinner;
}());
var AmplifyNav = /** @class */ (function () {
    function AmplifyNav(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyNav.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
AmplifyNav.ɵfac = function AmplifyNav_Factory(t) { return new (t || AmplifyNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyNav, selectors: [["amplify-nav"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyNav_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyNav, [{
        type: Component,
        args: [{ selector: 'amplify-nav', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>' }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyNav;
}());
var AmplifyOauthButton = /** @class */ (function () {
    function AmplifyOauthButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyOauthButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyOauthButton = __decorate([
        ProxyCmp({ inputs: ['config'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyOauthButton);
AmplifyOauthButton.ɵfac = function AmplifyOauthButton_Factory(t) { return new (t || AmplifyOauthButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyOauthButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyOauthButton, selectors: [["amplify-oauth-button"]], inputs: { config: "config" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyOauthButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyOauthButton, [{
        type: Component,
        args: [{ selector: 'amplify-oauth-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['config'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyOauthButton;
}());
var AmplifyPasswordField = /** @class */ (function () {
    function AmplifyPasswordField(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyPasswordField.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyPasswordField = __decorate([
        ProxyCmp({ inputs: ['disabled', 'fieldId', 'handleInputChange', 'hint', 'inputProps', 'label', 'placeholder', 'required', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyPasswordField);
AmplifyPasswordField.ɵfac = function AmplifyPasswordField_Factory(t) { return new (t || AmplifyPasswordField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyPasswordField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyPasswordField, selectors: [["amplify-password-field"]], inputs: { disabled: "disabled", fieldId: "fieldId", handleInputChange: "handleInputChange", hint: "hint", inputProps: "inputProps", label: "label", placeholder: "placeholder", required: "required", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyPasswordField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyPasswordField, [{
        type: Component,
        args: [{ selector: 'amplify-password-field', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['disabled', 'fieldId', 'handleInputChange', 'hint', 'inputProps', 'label', 'placeholder', 'required', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyPasswordField;
}());
var AmplifyPhoneField = /** @class */ (function () {
    function AmplifyPhoneField(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyPhoneField.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyPhoneField = __decorate([
        ProxyCmp({ inputs: ['disabled', 'fieldId', 'handleInputChange', 'hint', 'inputProps', 'label', 'placeholder', 'required', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyPhoneField);
AmplifyPhoneField.ɵfac = function AmplifyPhoneField_Factory(t) { return new (t || AmplifyPhoneField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyPhoneField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyPhoneField, selectors: [["amplify-phone-field"]], inputs: { disabled: "disabled", fieldId: "fieldId", handleInputChange: "handleInputChange", hint: "hint", inputProps: "inputProps", label: "label", placeholder: "placeholder", required: "required", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyPhoneField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyPhoneField, [{
        type: Component,
        args: [{ selector: 'amplify-phone-field', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['disabled', 'fieldId', 'handleInputChange', 'hint', 'inputProps', 'label', 'placeholder', 'required', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyPhoneField;
}());
var AmplifyRadioButton = /** @class */ (function () {
    function AmplifyRadioButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyRadioButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyRadioButton = __decorate([
        ProxyCmp({ inputs: ['checked', 'disabled', 'fieldId', 'handleInputChange', 'inputProps', 'label', 'name', 'placeholder', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyRadioButton);
AmplifyRadioButton.ɵfac = function AmplifyRadioButton_Factory(t) { return new (t || AmplifyRadioButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyRadioButton, selectors: [["amplify-radio-button"]], inputs: { checked: "checked", disabled: "disabled", fieldId: "fieldId", handleInputChange: "handleInputChange", inputProps: "inputProps", label: "label", name: "name", placeholder: "placeholder", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyRadioButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyRadioButton, [{
        type: Component,
        args: [{ selector: 'amplify-radio-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['checked', 'disabled', 'fieldId', 'handleInputChange', 'inputProps', 'label', 'name', 'placeholder', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyRadioButton;
}());
var AmplifyRequireNewPassword = /** @class */ (function () {
    function AmplifyRequireNewPassword(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyRequireNewPassword.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyRequireNewPassword = __decorate([
        ProxyCmp({ inputs: ['formFields', 'handleAuthStateChange', 'handleSubmit', 'headerText', 'submitButtonText', 'user'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyRequireNewPassword);
AmplifyRequireNewPassword.ɵfac = function AmplifyRequireNewPassword_Factory(t) { return new (t || AmplifyRequireNewPassword)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyRequireNewPassword.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyRequireNewPassword, selectors: [["amplify-require-new-password"]], inputs: { formFields: "formFields", handleAuthStateChange: "handleAuthStateChange", handleSubmit: "handleSubmit", headerText: "headerText", submitButtonText: "submitButtonText", user: "user" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyRequireNewPassword_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyRequireNewPassword, [{
        type: Component,
        args: [{ selector: 'amplify-require-new-password', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['formFields', 'handleAuthStateChange', 'handleSubmit', 'headerText', 'submitButtonText', 'user'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyRequireNewPassword;
}());
var AmplifySection = /** @class */ (function () {
    function AmplifySection(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifySection.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifySection = __decorate([
        ProxyCmp({ inputs: ['role'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifySection);
AmplifySection.ɵfac = function AmplifySection_Factory(t) { return new (t || AmplifySection)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifySection.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifySection, selectors: [["amplify-section"]], inputs: { role: "role" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifySection_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifySection, [{
        type: Component,
        args: [{ selector: 'amplify-section', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['role'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifySection;
}());
var AmplifySelect = /** @class */ (function () {
    function AmplifySelect(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifySelect.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifySelect = __decorate([
        ProxyCmp({ inputs: ['fieldId', 'handleInputChange', 'options'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifySelect);
AmplifySelect.ɵfac = function AmplifySelect_Factory(t) { return new (t || AmplifySelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifySelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifySelect, selectors: [["amplify-select"]], inputs: { fieldId: "fieldId", handleInputChange: "handleInputChange", options: "options" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifySelect_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifySelect, [{
        type: Component,
        args: [{ selector: 'amplify-select', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['fieldId', 'handleInputChange', 'options'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifySelect;
}());
var AmplifySelectMfaType = /** @class */ (function () {
    function AmplifySelectMfaType(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifySelectMfaType.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifySelectMfaType = __decorate([
        ProxyCmp({ inputs: ['MFATypes', 'authData', 'handleSubmit'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifySelectMfaType);
AmplifySelectMfaType.ɵfac = function AmplifySelectMfaType_Factory(t) { return new (t || AmplifySelectMfaType)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifySelectMfaType.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifySelectMfaType, selectors: [["amplify-select-mfa-type"]], inputs: { MFATypes: "MFATypes", authData: "authData", handleSubmit: "handleSubmit" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifySelectMfaType_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifySelectMfaType, [{
        type: Component,
        args: [{ selector: 'amplify-select-mfa-type', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['MFATypes', 'authData', 'handleSubmit'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifySelectMfaType;
}());
var AmplifySignIn = /** @class */ (function () {
    function AmplifySignIn(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifySignIn.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifySignIn = __decorate([
        ProxyCmp({ inputs: ['federated', 'formFields', 'handleAuthStateChange', 'handleSubmit', 'headerText', 'hideSignUp', 'submitButtonText', 'usernameAlias'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifySignIn);
AmplifySignIn.ɵfac = function AmplifySignIn_Factory(t) { return new (t || AmplifySignIn)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifySignIn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifySignIn, selectors: [["amplify-sign-in"]], inputs: { federated: "federated", formFields: "formFields", handleAuthStateChange: "handleAuthStateChange", handleSubmit: "handleSubmit", headerText: "headerText", hideSignUp: "hideSignUp", submitButtonText: "submitButtonText", usernameAlias: "usernameAlias" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifySignIn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifySignIn, [{
        type: Component,
        args: [{ selector: 'amplify-sign-in', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['federated', 'formFields', 'handleAuthStateChange', 'handleSubmit', 'headerText', 'hideSignUp', 'submitButtonText', 'usernameAlias'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifySignIn;
}());
var AmplifySignInButton = /** @class */ (function () {
    function AmplifySignInButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifySignInButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifySignInButton = __decorate([
        ProxyCmp({ inputs: ['provider'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifySignInButton);
AmplifySignInButton.ɵfac = function AmplifySignInButton_Factory(t) { return new (t || AmplifySignInButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifySignInButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifySignInButton, selectors: [["amplify-sign-in-button"]], inputs: { provider: "provider" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifySignInButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifySignInButton, [{
        type: Component,
        args: [{ selector: 'amplify-sign-in-button', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['provider'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifySignInButton;
}());
var AmplifySignOut = /** @class */ (function () {
    function AmplifySignOut(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifySignOut.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifySignOut = __decorate([
        ProxyCmp({ inputs: ['buttonText', 'handleAuthStateChange'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifySignOut);
AmplifySignOut.ɵfac = function AmplifySignOut_Factory(t) { return new (t || AmplifySignOut)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifySignOut.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifySignOut, selectors: [["amplify-sign-out"]], inputs: { buttonText: "buttonText", handleAuthStateChange: "handleAuthStateChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifySignOut_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifySignOut, [{
        type: Component,
        args: [{ selector: 'amplify-sign-out', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['buttonText', 'handleAuthStateChange'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifySignOut;
}());
var AmplifySignUp = /** @class */ (function () {
    function AmplifySignUp(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifySignUp.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifySignUp = __decorate([
        ProxyCmp({ inputs: ['formFields', 'handleAuthStateChange', 'handleSubmit', 'haveAccountText', 'headerText', 'signInText', 'submitButtonText', 'usernameAlias', 'validationErrors'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifySignUp);
AmplifySignUp.ɵfac = function AmplifySignUp_Factory(t) { return new (t || AmplifySignUp)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifySignUp.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifySignUp, selectors: [["amplify-sign-up"]], inputs: { formFields: "formFields", handleAuthStateChange: "handleAuthStateChange", handleSubmit: "handleSubmit", haveAccountText: "haveAccountText", headerText: "headerText", signInText: "signInText", submitButtonText: "submitButtonText", usernameAlias: "usernameAlias", validationErrors: "validationErrors" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifySignUp_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifySignUp, [{
        type: Component,
        args: [{ selector: 'amplify-sign-up', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['formFields', 'handleAuthStateChange', 'handleSubmit', 'haveAccountText', 'headerText', 'signInText', 'submitButtonText', 'usernameAlias', 'validationErrors'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifySignUp;
}());
var AmplifyStrike = /** @class */ (function () {
    function AmplifyStrike(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyStrike.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
AmplifyStrike.ɵfac = function AmplifyStrike_Factory(t) { return new (t || AmplifyStrike)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyStrike.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyStrike, selectors: [["amplify-strike"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyStrike_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyStrike, [{
        type: Component,
        args: [{ selector: 'amplify-strike', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>' }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyStrike;
}());
var AmplifyToast = /** @class */ (function () {
    function AmplifyToast(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyToast.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyToast = __decorate([
        ProxyCmp({ inputs: ['handleClose', 'message'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyToast);
AmplifyToast.ɵfac = function AmplifyToast_Factory(t) { return new (t || AmplifyToast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyToast.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyToast, selectors: [["amplify-toast"]], inputs: { handleClose: "handleClose", message: "message" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyToast_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyToast, [{
        type: Component,
        args: [{ selector: 'amplify-toast', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['handleClose', 'message'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyToast;
}());
var AmplifyTooltip = /** @class */ (function () {
    function AmplifyTooltip(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyTooltip.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyTooltip = __decorate([
        ProxyCmp({ inputs: ['shouldAutoShow', 'text'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyTooltip);
AmplifyTooltip.ɵfac = function AmplifyTooltip_Factory(t) { return new (t || AmplifyTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyTooltip.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyTooltip, selectors: [["amplify-tooltip"]], inputs: { shouldAutoShow: "shouldAutoShow", text: "text" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyTooltip_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyTooltip, [{
        type: Component,
        args: [{ selector: 'amplify-tooltip', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['shouldAutoShow', 'text'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyTooltip;
}());
var AmplifyTotpSetup = /** @class */ (function () {
    function AmplifyTotpSetup(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyTotpSetup.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyTotpSetup = __decorate([
        ProxyCmp({ inputs: ['handleAuthStateChange', 'headerText', 'user'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyTotpSetup);
AmplifyTotpSetup.ɵfac = function AmplifyTotpSetup_Factory(t) { return new (t || AmplifyTotpSetup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyTotpSetup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyTotpSetup, selectors: [["amplify-totp-setup"]], inputs: { handleAuthStateChange: "handleAuthStateChange", headerText: "headerText", user: "user" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyTotpSetup_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyTotpSetup, [{
        type: Component,
        args: [{ selector: 'amplify-totp-setup', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['handleAuthStateChange', 'headerText', 'user'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyTotpSetup;
}());
var AmplifyUsernameField = /** @class */ (function () {
    function AmplifyUsernameField(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyUsernameField.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyUsernameField = __decorate([
        ProxyCmp({ inputs: ['disabled', 'fieldId', 'handleInputChange', 'inputProps', 'label', 'placeholder', 'required', 'value'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyUsernameField);
AmplifyUsernameField.ɵfac = function AmplifyUsernameField_Factory(t) { return new (t || AmplifyUsernameField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyUsernameField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyUsernameField, selectors: [["amplify-username-field"]], inputs: { disabled: "disabled", fieldId: "fieldId", handleInputChange: "handleInputChange", inputProps: "inputProps", label: "label", placeholder: "placeholder", required: "required", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyUsernameField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyUsernameField, [{
        type: Component,
        args: [{ selector: 'amplify-username-field', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['disabled', 'fieldId', 'handleInputChange', 'inputProps', 'label', 'placeholder', 'required', 'value'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyUsernameField;
}());
var AmplifyVerifyContact = /** @class */ (function () {
    function AmplifyVerifyContact(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AmplifyVerifyContact.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AmplifyVerifyContact = __decorate([
        ProxyCmp({ inputs: ['handleAuthStateChange', 'user'] }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AmplifyVerifyContact);
AmplifyVerifyContact.ɵfac = function AmplifyVerifyContact_Factory(t) { return new (t || AmplifyVerifyContact)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AmplifyVerifyContact.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AmplifyVerifyContact, selectors: [["amplify-verify-contact"]], inputs: { handleAuthStateChange: "handleAuthStateChange", user: "user" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AmplifyVerifyContact_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyVerifyContact, [{
        type: Component,
        args: [{ selector: 'amplify-verify-contact', changeDetection: ChangeDetectionStrategy.OnPush, template: '<ng-content></ng-content>', inputs: ['handleAuthStateChange', 'user'] }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AmplifyVerifyContact;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
defineCustomElements(window);
/** @type {?} */
var DECLARATIONS = [
    AmplifyAuthenticator,
    AmplifySignIn,
    AmplifySignUp,
    AmplifySignOut,
    AmplifyConfirmSignIn,
    AmplifyConfirmSignUp,
    AmplifyForgotPassword,
    AmplifyRequireNewPassword,
    AmplifyVerifyContact,
    AmplifyTotpSetup,
    AmplifyAmazonButton,
    AmplifyAuthFields,
    AmplifyAuth0Button,
    AmplifyButton,
    AmplifyCheckbox,
    AmplifyCodeField,
    AmplifyCountryDialCode,
    AmplifyEmailField,
    AmplifyFacebookButton,
    AmplifyFederatedButtons,
    AmplifyFederatedSignIn,
    AmplifyFormField,
    AmplifyFormSection,
    AmplifyGoogleButton,
    AmplifyGreetings,
    AmplifyHint,
    AmplifyIcon,
    AmplifyIconButton,
    AmplifyInput,
    AmplifyLabel,
    AmplifyLink,
    AmplifyLoadingSpinner,
    AmplifyNav,
    AmplifyOauthButton,
    AmplifyPasswordField,
    AmplifyPhoneField,
    AmplifyRadioButton,
    AmplifySection,
    AmplifySelect,
    AmplifySelectMfaType,
    AmplifySignInButton,
    AmplifyStrike,
    AmplifyToast,
    AmplifyTooltip,
    AmplifyUsernameField,
    AmplifyContainer,
];
var AmplifyUIAngularModule = /** @class */ (function () {
    function AmplifyUIAngularModule() {
    }
AmplifyUIAngularModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AmplifyUIAngularModule });
AmplifyUIAngularModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AmplifyUIAngularModule_Factory(t) { return new (t || AmplifyUIAngularModule)(); }, providers: [], imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AmplifyUIAngularModule, { declarations: [AmplifyAuthenticator,
        AmplifySignIn,
        AmplifySignUp,
        AmplifySignOut,
        AmplifyConfirmSignIn,
        AmplifyConfirmSignUp,
        AmplifyForgotPassword,
        AmplifyRequireNewPassword,
        AmplifyVerifyContact,
        AmplifyTotpSetup,
        AmplifyAmazonButton,
        AmplifyAuthFields,
        AmplifyAuth0Button,
        AmplifyButton,
        AmplifyCheckbox,
        AmplifyCodeField,
        AmplifyCountryDialCode,
        AmplifyEmailField,
        AmplifyFacebookButton,
        AmplifyFederatedButtons,
        AmplifyFederatedSignIn,
        AmplifyFormField,
        AmplifyFormSection,
        AmplifyGoogleButton,
        AmplifyGreetings,
        AmplifyHint,
        AmplifyIcon,
        AmplifyIconButton,
        AmplifyInput,
        AmplifyLabel,
        AmplifyLink,
        AmplifyLoadingSpinner,
        AmplifyNav,
        AmplifyOauthButton,
        AmplifyPasswordField,
        AmplifyPhoneField,
        AmplifyRadioButton,
        AmplifySection,
        AmplifySelect,
        AmplifySelectMfaType,
        AmplifySignInButton,
        AmplifyStrike,
        AmplifyToast,
        AmplifyTooltip,
        AmplifyUsernameField,
        AmplifyContainer], exports: [AmplifyAuthenticator,
        AmplifySignIn,
        AmplifySignUp,
        AmplifySignOut,
        AmplifyConfirmSignIn,
        AmplifyConfirmSignUp,
        AmplifyForgotPassword,
        AmplifyRequireNewPassword,
        AmplifyVerifyContact,
        AmplifyTotpSetup,
        AmplifyAmazonButton,
        AmplifyAuthFields,
        AmplifyAuth0Button,
        AmplifyButton,
        AmplifyCheckbox,
        AmplifyCodeField,
        AmplifyCountryDialCode,
        AmplifyEmailField,
        AmplifyFacebookButton,
        AmplifyFederatedButtons,
        AmplifyFederatedSignIn,
        AmplifyFormField,
        AmplifyFormSection,
        AmplifyGoogleButton,
        AmplifyGreetings,
        AmplifyHint,
        AmplifyIcon,
        AmplifyIconButton,
        AmplifyInput,
        AmplifyLabel,
        AmplifyLink,
        AmplifyLoadingSpinner,
        AmplifyNav,
        AmplifyOauthButton,
        AmplifyPasswordField,
        AmplifyPhoneField,
        AmplifyRadioButton,
        AmplifySection,
        AmplifySelect,
        AmplifySelectMfaType,
        AmplifySignInButton,
        AmplifyStrike,
        AmplifyToast,
        AmplifyTooltip,
        AmplifyUsernameField,
        AmplifyContainer] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmplifyUIAngularModule, [{
        type: NgModule,
        args: [{
                declarations: DECLARATIONS,
                exports: DECLARATIONS,
                imports: [],
                providers: []
            }]
    }], function () { return []; }, null); })();
    return AmplifyUIAngularModule;
}());

export { AmplifyAmazonButton, AmplifyAuth0Button, AmplifyAuthFields, AmplifyAuthenticator, AmplifyButton, AmplifyCheckbox, AmplifyCodeField, AmplifyConfirmSignIn, AmplifyConfirmSignUp, AmplifyContainer, AmplifyCountryDialCode, AmplifyEmailField, AmplifyFacebookButton, AmplifyFederatedButtons, AmplifyFederatedSignIn, AmplifyForgotPassword, AmplifyFormField, AmplifyFormSection, AmplifyGoogleButton, AmplifyGreetings, AmplifyHint, AmplifyIcon, AmplifyIconButton, AmplifyInput, AmplifyLabel, AmplifyLink, AmplifyLoadingSpinner, AmplifyNav, AmplifyOauthButton, AmplifyPasswordField, AmplifyPhoneField, AmplifyRadioButton, AmplifyRequireNewPassword, AmplifySection, AmplifySelect, AmplifySelectMfaType, AmplifySignIn, AmplifySignInButton, AmplifySignOut, AmplifySignUp, AmplifyStrike, AmplifyToast, AmplifyTooltip, AmplifyTotpSetup, AmplifyUIAngularModule, AmplifyUsernameField, AmplifyVerifyContact, ProxyCmp, proxyInputs, proxyMethods, proxyOutputs };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,