import { EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';
import { AmplifyService } from '../../../providers/amplify.service';
import * as ɵngcc0 from '@angular/core';
export declare class ChatbotComponentCore implements OnInit {
    amplifyService: AmplifyService;
    errorMessage: string;
    inputText: string;
    botName: string;
    chatTitle: string;
    clearComplete: boolean;
    messages: any;
    completions: any;
    currentVoiceState: string;
    inputDisabled: boolean;
    micText: string;
    voiceConfig: any;
    continueConversation: boolean;
    micButtonDisabled: boolean;
    audioInput: any;
    lexResponse: any;
    conversationModeOn: boolean;
    ref: ChangeDetectorRef;
    voiceEnabled: boolean;
    textEnabled: boolean;
    audioControl: any;
    protected logger: any;
    complete: EventEmitter<string>;
    constructor(ref: ChangeDetectorRef, amplifyService: AmplifyService);
    data: any;
    bot: string;
    title: string;
    clearOnComplete: boolean;
    ngOnInit(): void;
    performOnComplete(evt: any): void;
    onInputChange(value: string): void;
    onSubmit(e: any): void;
    onSilenceHandler: () => void;
    reset(): void;
    onError(error: any): void;
    lexResponseHandler(): Promise<void>;
    doneSpeakingHandler(): void;
    micButtonHandler(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChatbotComponentCore, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChatbotComponentCore, "amplify-interactions-core", never, { "data": "data"; "bot": "bot"; "title": "title"; "clearOnComplete": "clearOnComplete"; }, { "complete": "complete"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdGJvdC5jb21wb25lbnQuY29yZS5kLnRzIiwic291cmNlcyI6WyJjaGF0Ym90LmNvbXBvbmVudC5jb3JlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkluaXQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbXBsaWZ5U2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy9hbXBsaWZ5LnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hhdGJvdENvbXBvbmVudENvcmUgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIGFtcGxpZnlTZXJ2aWNlOiBBbXBsaWZ5U2VydmljZTtcbiAgICBlcnJvck1lc3NhZ2U6IHN0cmluZztcbiAgICBpbnB1dFRleHQ6IHN0cmluZztcbiAgICBib3ROYW1lOiBzdHJpbmc7XG4gICAgY2hhdFRpdGxlOiBzdHJpbmc7XG4gICAgY2xlYXJDb21wbGV0ZTogYm9vbGVhbjtcbiAgICBtZXNzYWdlczogYW55O1xuICAgIGNvbXBsZXRpb25zOiBhbnk7XG4gICAgY3VycmVudFZvaWNlU3RhdGU6IHN0cmluZztcbiAgICBpbnB1dERpc2FibGVkOiBib29sZWFuO1xuICAgIG1pY1RleHQ6IHN0cmluZztcbiAgICB2b2ljZUNvbmZpZzogYW55O1xuICAgIGNvbnRpbnVlQ29udmVyc2F0aW9uOiBib29sZWFuO1xuICAgIG1pY0J1dHRvbkRpc2FibGVkOiBib29sZWFuO1xuICAgIGF1ZGlvSW5wdXQ6IGFueTtcbiAgICBsZXhSZXNwb25zZTogYW55O1xuICAgIGNvbnZlcnNhdGlvbk1vZGVPbjogYm9vbGVhbjtcbiAgICByZWY6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHZvaWNlRW5hYmxlZDogYm9vbGVhbjtcbiAgICB0ZXh0RW5hYmxlZDogYm9vbGVhbjtcbiAgICBhdWRpb0NvbnRyb2w6IGFueTtcbiAgICBwcm90ZWN0ZWQgbG9nZ2VyOiBhbnk7XG4gICAgY29tcGxldGU6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIGNvbnN0cnVjdG9yKHJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGFtcGxpZnlTZXJ2aWNlOiBBbXBsaWZ5U2VydmljZSk7XG4gICAgZGF0YTogYW55O1xuICAgIGJvdDogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgY2xlYXJPbkNvbXBsZXRlOiBib29sZWFuO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcGVyZm9ybU9uQ29tcGxldGUoZXZ0OiBhbnkpOiB2b2lkO1xuICAgIG9uSW5wdXRDaGFuZ2UodmFsdWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgb25TdWJtaXQoZTogYW55KTogdm9pZDtcbiAgICBvblNpbGVuY2VIYW5kbGVyOiAoKSA9PiB2b2lkO1xuICAgIHJlc2V0KCk6IHZvaWQ7XG4gICAgb25FcnJvcihlcnJvcjogYW55KTogdm9pZDtcbiAgICBsZXhSZXNwb25zZUhhbmRsZXIoKTogUHJvbWlzZTx2b2lkPjtcbiAgICBkb25lU3BlYWtpbmdIYW5kbGVyKCk6IHZvaWQ7XG4gICAgbWljQnV0dG9uSGFuZGxlcigpOiBQcm9taXNlPHZvaWQ+O1xufVxuIl19