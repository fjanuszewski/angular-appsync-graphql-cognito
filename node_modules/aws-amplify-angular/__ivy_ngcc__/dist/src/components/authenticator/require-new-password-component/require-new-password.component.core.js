// tslint:disable
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
// tslint:enable
import { Component, Input, Inject } from '@angular/core';
import { AmplifyService } from '../../../providers/amplify.service';
import { auth } from '../../../assets/data-test-attributes';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function RequireNewPasswordComponentCore_div_0_div_17_Template(rf, ctx) { if (rf & 1) {
    var _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵelementStart(1, "div", 16);
    ɵngcc0.ɵɵelementStart(2, "span", 17);
    ɵngcc0.ɵɵtext(3, "\u26A0");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 18);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "a", 19);
    ɵngcc0.ɵɵlistener("click", function RequireNewPasswordComponentCore_div_0_div_17_Template_a_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.onAlertClose(); });
    ɵngcc0.ɵɵtext(7, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.amplifyService.i18n().get(ctx_r2.errorMessage));
} }
function RequireNewPasswordComponentCore_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 5);
    ɵngcc0.ɵɵelementStart(6, "label", 6);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "input", 7, 8);
    ɵngcc0.ɵɵlistener("keyup", function RequireNewPasswordComponentCore_div_0_Template_input_keyup_8_listener() { ɵngcc0.ɵɵrestoreView(_r6); var _r1 = ɵngcc0.ɵɵreference(9); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.setPassword(_r1.value); })("keyup.enter", function RequireNewPasswordComponentCore_div_0_Template_input_keyup_enter_8_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onSubmit(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "div", 9);
    ɵngcc0.ɵɵelementStart(11, "div", 10);
    ɵngcc0.ɵɵelementStart(12, "a", 11);
    ɵngcc0.ɵɵlistener("click", function RequireNewPasswordComponentCore_div_0_Template_a_click_12_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onSignIn(); });
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "div", 12);
    ɵngcc0.ɵɵelementStart(15, "button", 13);
    ɵngcc0.ɵɵlistener("click", function RequireNewPasswordComponentCore_div_0_Template_button_click_15_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onSubmit(); });
    ɵngcc0.ɵɵtext(16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(17, RequireNewPasswordComponentCore_div_0_div_17_Template, 8, 1, "div", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.amplifyService.i18n().get("You are required to update your password"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.amplifyService.i18n().get("Password *"), " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r0.amplifyService.i18n().get("Password"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.amplifyService.i18n().get("Back to Sign In"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.amplifyService.i18n().get("Submit"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.errorMessage);
} }
var template = "\n<div class=\"amplify-container\" *ngIf=\"_show\">\n<div class=\"amplify-form-container\" data-test=\"" + auth.requireNewPassword.section + "\">\n  <div class=\"amplify-form-body\" data-test=\"" + auth.requireNewPassword.bodySection + "\">\n  <div class=\"amplify-form-header\" data-test=\"" + auth.requireNewPassword.headerSection + "\">\n    {{ this.amplifyService.i18n().get('You are required to update your password') }}\n  </div>\n  <div class=\"amplify-form-row\">\n    <label class=\"amplify-input-label\" for=\"password\">\n      {{ this.amplifyService.i18n().get('Password *') }}\n    </label>\n    <input #password\n      (keyup)=\"setPassword(password.value)\"\n      (keyup.enter)=\"onSubmit()\"\n      class=\"amplify-form-input\"\n      type=\"password\"\n      placeholder=\"{{ this.amplifyService.i18n().get('Password') }}\"\n      data-test=\"" + auth.requireNewPassword.newPasswordInput + "\"\n    />\n    </div>\n    <div class=\"amplify-form-actions\">\n      <div class=\"amplify-form-cell-left\">\n        <a class=\"amplify-form-link\"\n          (click)=\"onSignIn()\"\n          data-test=\"" + auth.requireNewPassword.backToSignInLink + "\"\n        >{{ this.amplifyService.i18n().get('Back to Sign In') }}</a>\n      </div>\n      <div class=\"amplify-form-cell-right\">\n        <button class=\"amplify-form-button\"\n          (click)=\"onSubmit()\"\n          data-test=\"" + auth.requireNewPassword.submitButton + "\"\n        >{{ this.amplifyService.i18n().get('Submit') }}</button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n<div class=\"amplify-alert-body\">\n  <span class=\"amplify-alert-icon\">&#9888;</span>\n  <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n  <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n</div>\n</div>\n</div>\n";
var RequireNewPasswordComponentCore = /** @class */ (function () {
    function RequireNewPasswordComponentCore(amplifyService) {
        this.amplifyService = amplifyService;
        this.hide = [];
        this.logger = this.amplifyService.logger('RequireNewPasswordComponent');
    }
    Object.defineProperty(RequireNewPasswordComponentCore.prototype, "authState", {
        set: function (authState) {
            this._authState = authState;
            this._show = authState.state === 'requireNewPassword';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RequireNewPasswordComponentCore.prototype, "data", {
        set: function (data) {
            this._authState = data.authState;
            this._show = data.authState.state === 'requireNewPassword';
            this.hide = data.hide ? data.hide : this.hide;
        },
        enumerable: true,
        configurable: true
    });
    RequireNewPasswordComponentCore.prototype.ngOnInit = function () {
        if (!this.amplifyService.auth()) {
            throw new Error('Auth module not registered on AmplifyService provider');
        }
    };
    RequireNewPasswordComponentCore.prototype.shouldHide = function (comp) {
        return this.hide.filter(function (item) { return item === comp; }).length > 0;
    };
    RequireNewPasswordComponentCore.prototype.setPassword = function (password) {
        this.password = password;
    };
    RequireNewPasswordComponentCore.prototype.onSubmit = function () {
        var _this = this;
        var user = this._authState.user;
        var requiredAttributes = user.challengeParam.requiredAttributes;
        this.amplifyService
            .auth()
            .completeNewPassword(user, this.password, requiredAttributes)
            .then(function () {
            _this.onAlertClose();
            _this.amplifyService.setAuthState({ state: 'signIn', user: user });
        })
            .catch(function (err) { return _this._setError(err); });
    };
    RequireNewPasswordComponentCore.prototype.onSignIn = function () {
        this.onAlertClose();
        this.amplifyService.setAuthState({ state: 'signIn', user: null });
    };
    RequireNewPasswordComponentCore.prototype.onAlertClose = function () {
        this._setError(null);
    };
    RequireNewPasswordComponentCore.prototype._setError = function (err) {
        if (!err) {
            this.errorMessage = null;
            return;
        }
        this.errorMessage = err.message || err;
    };
    /** @nocollapse */
    RequireNewPasswordComponentCore.ctorParameters = function () { return [
        { type: AmplifyService, decorators: [{ type: Inject, args: [AmplifyService,] },] },
    ]; };
    RequireNewPasswordComponentCore.propDecorators = {
        "authState": [{ type: Input },],
        "hide": [{ type: Input },],
        "data": [{ type: Input },],
    };
RequireNewPasswordComponentCore.ɵfac = function RequireNewPasswordComponentCore_Factory(t) { return new (t || RequireNewPasswordComponentCore)(ɵngcc0.ɵɵdirectiveInject(AmplifyService)); };
RequireNewPasswordComponentCore.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RequireNewPasswordComponentCore, selectors: [["amplify-auth-require-new-password-core"]], inputs: { hide: "hide", authState: "authState", data: "data" }, decls: 1, vars: 1, consts: [["class", "amplify-container", 4, "ngIf"], [1, "amplify-container"], ["data-test", "require-new-password-section", 1, "amplify-form-container"], ["data-test", "require-new-password-body-section", 1, "amplify-form-body"], ["data-test", "require-new-password-header-section", 1, "amplify-form-header"], [1, "amplify-form-row"], ["for", "password", 1, "amplify-input-label"], ["type", "password", "data-test", "require-new-password-new-password-input", 1, "amplify-form-input", 3, "placeholder", "keyup", "keyup.enter"], ["password", ""], [1, "amplify-form-actions"], [1, "amplify-form-cell-left"], ["data-test", "require-new-password-back-to-sign-in-link", 1, "amplify-form-link", 3, "click"], [1, "amplify-form-cell-right"], ["data-test", "require-new-password-submit-button", 1, "amplify-form-button", 3, "click"], ["class", "amplify-alert", 4, "ngIf"], [1, "amplify-alert"], [1, "amplify-alert-body"], [1, "amplify-alert-icon"], [1, "amplify-alert-message"], [1, "amplify-alert-close", 3, "click"]], template: function RequireNewPasswordComponentCore_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, RequireNewPasswordComponentCore_div_0_Template, 18, 6, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx._show);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RequireNewPasswordComponentCore, [{
        type: Component,
        args: [{
                selector: 'amplify-auth-require-new-password-core',
                template: template
            }]
    }], function () { return [{ type: AmplifyService, decorators: [{
                type: Inject,
                args: [AmplifyService]
            }] }]; }, { hide: [{
            type: Input
        }], authState: [{
            type: Input
        }], data: [{
            type: Input
        }] }); })();
    return RequireNewPasswordComponentCore;
}());
export { RequireNewPasswordComponentCore };

//# sourceMappingURL=require-new-password.component.core.js.map