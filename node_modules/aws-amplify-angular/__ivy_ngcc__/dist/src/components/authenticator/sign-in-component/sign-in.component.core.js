// tslint:disable
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
// tslint:enable
import { Component, Input, Inject } from '@angular/core';
import { AmplifyService } from '../../../providers/amplify.service';
import { includes, composePhoneNumber } from '../common';
import { UsernameAttributes } from '../types';
import { auth } from '../../../assets/data-test-attributes';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../username-field-component/username-field.component.core';

function SignInComponentCore_div_0_span_11_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 16);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "a", 17);
    ɵngcc0.ɵɵlistener("click", function SignInComponentCore_div_0_span_11_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.onForgotPassword(); });
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.amplifyService.i18n().get("Forgot Password?"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.amplifyService.i18n().get("Reset password"));
} }
function SignInComponentCore_div_0_div_16_Template(rf, ctx) { if (rf & 1) {
    var _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelementStart(1, "div", 19);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementStart(3, "a", 20);
    ɵngcc0.ɵɵlistener("click", function SignInComponentCore_div_0_div_16_Template_a_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r8); var ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.onSignUp(); });
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.amplifyService.i18n().get("No account?"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.amplifyService.i18n().get("Create account"), " ");
} }
function SignInComponentCore_div_0_div_17_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 21);
    ɵngcc0.ɵɵelementStart(1, "div", 22);
    ɵngcc0.ɵɵelementStart(2, "span", 23);
    ɵngcc0.ɵɵtext(3, "\u26A0");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 24);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "a", 25);
    ɵngcc0.ɵɵlistener("click", function SignInComponentCore_div_0_div_17_Template_a_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.onAlertClose(); });
    ɵngcc0.ɵɵtext(7, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.amplifyService.i18n().get(ctx_r4.errorMessage), "");
} }
function SignInComponentCore_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "amplify-auth-username-field-core", 5);
    ɵngcc0.ɵɵlistener("usernameFieldChanged", function SignInComponentCore_div_0_Template_amplify_auth_username_field_core_usernameFieldChanged_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onUsernameFieldChanged($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 6);
    ɵngcc0.ɵɵelementStart(7, "label", 7);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "input", 8, 9);
    ɵngcc0.ɵɵlistener("keyup", function SignInComponentCore_div_0_Template_input_keyup_9_listener() { ɵngcc0.ɵɵrestoreView(_r12); var _r1 = ɵngcc0.ɵɵreference(10); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.setPassword(_r1.value); })("keyup.enter", function SignInComponentCore_div_0_Template_input_keyup_enter_9_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onSignIn(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(11, SignInComponentCore_div_0_span_11_Template, 4, 2, "span", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "div", 11);
    ɵngcc0.ɵɵelementStart(13, "div", 12);
    ɵngcc0.ɵɵelementStart(14, "button", 13);
    ɵngcc0.ɵɵlistener("click", function SignInComponentCore_div_0_Template_button_click_14_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.onSignIn(); });
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(16, SignInComponentCore_div_0_div_16_Template, 5, 2, "div", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(17, SignInComponentCore_div_0_div_17_Template, 8, 1, "div", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.amplifyService.i18n().get("Sign in to your account"), " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("usernameAttributes", ctx_r0._usernameAttributes);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.amplifyService.i18n().get("Password *"), " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r0.amplifyService.i18n().get("Enter your password"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.shouldHide("ForgotPassword"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.amplifyService.i18n().get("Sign In"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.shouldHide("SignUp"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.errorMessage);
} }
var template = "\n<div class=\"amplify-container\" *ngIf=\"_show\">\n  <div class=\"amplify-form-container\" data-test=\"" + auth.signIn.section + "\">\n    <div class=\"amplify-form-body\" data-test=\"" + auth.signIn.bodySection + "\">\n      <div class=\"amplify-form-header\" data-test=\"" + auth.signIn.headerSection + "\">\n        {{ this.amplifyService.i18n().get('Sign in to your account') }}\n      </div>\n      <amplify-auth-username-field-core\n        [usernameAttributes]=\"_usernameAttributes\"\n        (usernameFieldChanged)=\"onUsernameFieldChanged($event)\"\n      ></amplify-auth-username-field-core>\n      <div class=\"amplify-form-row amplify-signin-password\">\n        <label class=\"amplify-input-label\" for=\"passwordField\">\n          {{ this.amplifyService.i18n().get('Password *') }}\n        </label>\n        <input #passwordField\n          (keyup)=\"setPassword(passwordField.value)\"\n          (keyup.enter)=\"onSignIn()\"\n          class=\"amplify-form-input\"\n          type=\"password\"\n          required\n          placeholder=\"{{ this.amplifyService.i18n().get('Enter your password') }}\"\n          data-test=\"" + auth.signIn.passwordInput + "\"\n        />\n        <span class=\"amplify-form-action\" *ngIf=\"!shouldHide('ForgotPassword')\">\n          {{ this.amplifyService.i18n().get('Forgot Password?') }}\n          <a class=\"amplify-form-link\"\n            (click)=\"onForgotPassword()\"\n            data-test=\"" + auth.signIn.forgotPasswordLink + "\"\n          >{{ this.amplifyService.i18n().get('Reset password') }}</a>\n        </span>\n      </div>\n      <div class=\"amplify-form-actions\">\n        <div class=\"amplify-form-cell-right\">\n          <button class=\"amplify-form-button\"\n            (click)=\"onSignIn()\"\n            data-test=\"" + auth.signIn.signInButton + "\"\n          >{{ this.amplifyService.i18n().get('Sign In') }}</button>\n        </div>\n        <div class=\"amplify-form-cell-left\" *ngIf=\"!shouldHide('SignUp')\">\n          <div class=\"amplify-form-signup\">\n            {{ this.amplifyService.i18n().get('No account?') }}\n            <a\n              class=\"amplify-form-link\"\n              (click)=\"onSignUp()\"\n              data-test=\"" + auth.signIn.createAccountLink + "\"\n              >\n              {{ this.amplifyService.i18n().get('Create account') }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n    <div class=\"amplify-alert-body\">\n      <span class=\"amplify-alert-icon\">&#9888;</span>\n      <div\n        class=\"amplify-alert-message\"\n        data-test=\"" + auth.signIn.signInError + "\"\n        >\n          {{ this.amplifyService.i18n().get(errorMessage) }}</div>\n      <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n    </div>\n  </div>\n</div>\n";
var SignInComponentCore = /** @class */ (function () {
    function SignInComponentCore(amplifyService) {
        this.amplifyService = amplifyService;
        this._usernameAttributes = 'username';
        this.local_phone_number = '';
        this.country_code = '1';
        this.email = '';
        this.signInUsername = '';
        this.hide = [];
        this.logger = this.amplifyService.logger('SignInComponent');
        this.onUsernameFieldChanged = this.onUsernameFieldChanged.bind(this);
    }
    Object.defineProperty(SignInComponentCore.prototype, "data", {
        set: function (data) {
            this.hide = data.hide ? data.hide : this.hide;
            this._usernameAttributes = data.usernameAttributes;
            this._authState = data.authState;
            this._show = includes(['signIn', 'signedOut', 'signedUp'], data.authState.state);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SignInComponentCore.prototype, "authState", {
        set: function (authState) {
            this._authState = authState;
            this._show = includes(['signIn', 'signedOut', 'signedUp'], authState.state);
            this.username = authState.user ? authState.user.username || '' : '';
            this.email = authState.user ? authState.user.email || '' : '';
            this.country_code =
                authState.user && authState.user.country_code
                    ? authState.user.country_code
                    : this.country_code;
            this.local_phone_number = authState.user
                ? authState.user.local_phone_number || ''
                : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SignInComponentCore.prototype, "usernameAttributes", {
        set: function (usernameAttributes) {
            this._usernameAttributes = usernameAttributes;
        },
        enumerable: true,
        configurable: true
    });
    SignInComponentCore.prototype.ngOnInit = function () {
        if (!this.amplifyService.auth()) {
            throw new Error('Auth module not registered on AmplifyService provider');
        }
    };
    SignInComponentCore.prototype.shouldHide = function (comp) {
        return this.hide.filter(function (item) { return item === comp; }).length > 0;
    };
    SignInComponentCore.prototype.setUsername = function (username) {
        this.username = username;
    };
    SignInComponentCore.prototype.setPassword = function (password) {
        this.password = password;
    };
    SignInComponentCore.prototype.onSignIn = function () {
        var _this = this;
        this.amplifyService
            .auth()
            .signIn(this.getSignInUsername(), this.password)
            .then(function (user) {
            if (user['challengeName'] === 'SMS_MFA' ||
                user['challengeName'] === 'SOFTWARE_TOKEN_MFA') {
                _this.amplifyService.setAuthState({ state: 'confirmSignIn', user: user });
            }
            else if (user['challengeName'] === 'NEW_PASSWORD_REQUIRED') {
                _this.amplifyService.setAuthState({
                    state: 'requireNewPassword',
                    user: user,
                });
            }
            else if (user['challengeName'] === 'CUSTOM_CHALLENGE' &&
                user.challengeParam &&
                user.challengeParam.trigger === 'true') {
                _this.amplifyService.setAuthState({
                    state: 'customConfirmSignIn',
                    user: user,
                });
            }
        })
            .catch(function (err) {
            _this._setError(err);
        });
    };
    SignInComponentCore.prototype.onAlertClose = function () {
        this._setError(null);
    };
    SignInComponentCore.prototype.getUserObj = function () {
        var user = this.username || this.email || this.local_phone_number
            ? {
                username: this.username,
                email: this.email,
                local_phone_number: this.local_phone_number,
                courtry_code: this.country_code,
            }
            : null;
        return user;
    };
    SignInComponentCore.prototype.onForgotPassword = function () {
        var user = this.getUserObj();
        this.onAlertClose();
        this.amplifyService.setAuthState({ state: 'forgotPassword', user: user });
    };
    SignInComponentCore.prototype.onSignUp = function () {
        var user = this.getUserObj();
        this.onAlertClose();
        this.amplifyService.setAuthState({ state: 'signUp', user: user });
    };
    SignInComponentCore.prototype._setError = function (err) {
        if (!err) {
            this.errorMessage = null;
            return;
        }
        this.errorMessage = err.message || err;
        this.logger.error(this.errorMessage);
    };
    SignInComponentCore.prototype.onUsernameFieldChanged = function (event) {
        this.email = event.email || this.email;
        this.username = event.username || this.username;
        this.country_code = event.country_code || this.country_code;
        this.local_phone_number =
            event.local_phone_number || this.local_phone_number;
    };
    SignInComponentCore.prototype.getSignInUsername = function () {
        switch (this._usernameAttributes) {
            case UsernameAttributes.EMAIL:
                return this.email;
            case UsernameAttributes.PHONE_NUMBER:
                return composePhoneNumber(this.country_code, this.local_phone_number);
            default:
                return this.username;
        }
    };
    /** @nocollapse */
    SignInComponentCore.ctorParameters = function () { return [
        { type: AmplifyService, decorators: [{ type: Inject, args: [AmplifyService,] },] },
    ]; };
    SignInComponentCore.propDecorators = {
        "data": [{ type: Input },],
        "hide": [{ type: Input },],
        "authState": [{ type: Input },],
        "usernameAttributes": [{ type: Input },],
    };
SignInComponentCore.ɵfac = function SignInComponentCore_Factory(t) { return new (t || SignInComponentCore)(ɵngcc0.ɵɵdirectiveInject(AmplifyService)); };
SignInComponentCore.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SignInComponentCore, selectors: [["amplify-auth-sign-in-core"]], inputs: { hide: "hide", data: "data", authState: "authState", usernameAttributes: "usernameAttributes" }, decls: 1, vars: 1, consts: [["class", "amplify-container", 4, "ngIf"], [1, "amplify-container"], ["data-test", "sign-in-section", 1, "amplify-form-container"], ["data-test", "sign-in-body-section", 1, "amplify-form-body"], ["data-test", "sign-in-header-section", 1, "amplify-form-header"], [3, "usernameAttributes", "usernameFieldChanged"], [1, "amplify-form-row", "amplify-signin-password"], ["for", "passwordField", 1, "amplify-input-label"], ["type", "password", "required", "", "data-test", "sign-in-password-input", 1, "amplify-form-input", 3, "placeholder", "keyup", "keyup.enter"], ["passwordField", ""], ["class", "amplify-form-action", 4, "ngIf"], [1, "amplify-form-actions"], [1, "amplify-form-cell-right"], ["data-test", "sign-in-sign-in-button", 1, "amplify-form-button", 3, "click"], ["class", "amplify-form-cell-left", 4, "ngIf"], ["class", "amplify-alert", 4, "ngIf"], [1, "amplify-form-action"], ["data-test", "sign-in-forgot-password-link", 1, "amplify-form-link", 3, "click"], [1, "amplify-form-cell-left"], [1, "amplify-form-signup"], ["data-test", "sign-in-create-account-link", 1, "amplify-form-link", 3, "click"], [1, "amplify-alert"], [1, "amplify-alert-body"], [1, "amplify-alert-icon"], ["data-test", "authenticator-error", 1, "amplify-alert-message"], [1, "amplify-alert-close", 3, "click"]], template: function SignInComponentCore_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SignInComponentCore_div_0_Template, 18, 8, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx._show);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.UsernameFieldComponentCore], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SignInComponentCore, [{
        type: Component,
        args: [{
                selector: 'amplify-auth-sign-in-core',
                template: template
            }]
    }], function () { return [{ type: AmplifyService, decorators: [{
                type: Inject,
                args: [AmplifyService]
            }] }]; }, { hide: [{
            type: Input
        }], data: [{
            type: Input
        }], authState: [{
            type: Input
        }], usernameAttributes: [{
            type: Input
        }] }); })();
    return SignInComponentCore;
}());
export { SignInComponentCore };

//# sourceMappingURL=sign-in.component.core.js.map