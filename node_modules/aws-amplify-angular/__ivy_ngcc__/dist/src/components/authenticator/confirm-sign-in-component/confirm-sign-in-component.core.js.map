{"version":3,"file":"confirm-sign-in-component.core.js","sources":["../../../../../src/components/authenticator/confirm-sign-in-component/confirm-sign-in-component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,EAAE,MAAM,eAAe,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,OAAO,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE5D,IAAM,QAAQ,GAAG,8GAEkC,IAAI,CAAC,aAAa,CAAC,OAAO,8DAC7B,IAAI,CAAC,aAAa,CAAC,WAAW,gEAC5B,IAAI,CAAC,aAAa,CAAC,aAAa,umBAY3D,IAAI,CAAC,aAAa,CAAC,SAAS,mTASxB,IAAI,CAAC,aAAa,CAAC,gBAAgB,iSASrC,IAAI,CAAC,aAAa,CAAC,aAAa,siBAgBxD,CAAC;AACF;AAGA,IASC,oCAA2C;AAAkB,QAAlB,mBAAc,GAAd,cAAc;AAAE,oBAiBjC,EAAE;AAC7B,QAjBE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;AACnE,KAAE;AACF,0BAEK,4CAAI;AAAI,uBAAH,IAAS;AACnB,YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,YAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AACnC,YAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,eAAe,CAAC;AACxD;AAEO;AACgB;AACZ;AAAQ,0BADd,iDAAS;AAAI,uBAAH,SAAoB;AACnC,YAAE,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAC9B,YAAE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,KAAK,eAAe,CAAC;AACnD;AAEO;AAEN;AACa;AAAQ,IADrB,6CAAQ,GAAR;AACA,QAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE;AACnC,YAAG,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;AAC5E,SAAG;AACH,KAAE;AAEF,IAAC,+CAAU,GAAV,UAAW,IAAI;AAChB,QAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,KAAK,IAAI,EAAb,CAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5D,KAAE;AAEF,IAAC,4CAAO,GAAP,UAAQ,IAAY;AACrB,QAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,KAAE;AAEF,IAAC,8CAAS,GAAT;AACD,QADC,iBAaC;AACF,QAbU,IAAA,2BAAI,CAAqB;AACnC,QAAU,IAAA,kCAAa,CAAU;AACjC,QAAE,IAAM,OAAO,GACZ,aAAa,KAAK,oBAAoB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;AACjE,QAAE,IAAI,CAAC,cAAc;AACrB,aAAI,IAAI,EAAE;AACV,aAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AAC3C,aAAI,IAAI,CAAC;AACH,YAAF,KAAI,CAAC,YAAY,EAAE,CAAC;AACxB,YAAI,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;AAClE,SAAI,CAAC;AACL,aAAI,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;AACtC,KAAE;AAEF,IAAC,6CAAQ,GAAR;AACA,QAAC,IAAI,CAAC,YAAY,EAAE,CAAC;AACtB,QAAE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AACpE,KAAE;AAEF,IAAC,iDAAY,GAAZ;AAAc,QACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACvB,KAAE;AAEF,IAAC,8CAAS,GAAT,UAAU,GAAG;AACd,QAAE,IAAI,CAAC,GAAG,EAAE;AACZ,YAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC5B,YAAG,OAAO;AACV,SAAG;AACH,QACE,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC;AACzC,KAAE,CAvEQ;AAAC;uCAJV,SAAS,SAAC,zDAIuB;QAHjC,QAAQ,EAAE,mCAAmC,sBAC7C,QAAQ,nFAKL,gBA/DK,cAAc,uBAmET,MAAM,SAAC,cAAc;CAT1B,DASoC;UAR5C,VAQsD;AAC5B,yBAGzB,KAAK;AACJ,8BAMD,KAAK;AACJ,yBAKD,KAAK;AAAM;;;;;;;;;;;;;;;;;;;;;;oBAAM;AAAC,qCApGpB;AAAE;AAAM,SA4EK,0BAA0B;AAAI","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { AuthState } from '../../../providers/auth.state';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div class=\"amplify-container\" *ngIf=\"_show\">\n  <div class=\"amplify-form-container\" data-test=\"${auth.confirmSignIn.section}\">\n    <div class=\"amplify-form-body\" data-test=\"${auth.confirmSignIn.bodySection}\">\n    <div class=\"amplify-form-header\" data-test=\"${auth.confirmSignIn.headerSection}\">{{ this.amplifyService.i18n().get('Confirm Sign in') }}</div>\n      <div class=\"amplify-form-row\" *ngIf=\"!shouldHide('SignIn')\">\n        <label class=\"amplify-input-label\" for=\"code\">\n          {{ this.amplifyService.i18n().get('Confirmation Code *') }}\n        </label>\n        <input #code\n          (change)=\"setCode(code.value)\"\n          (keyup)=\"setCode(code.value)\"\n          (keyup.enter)=\"onConfirm()\"\n          class=\"amplify-form-input\"\n          type=\"text\"\n          placeholder=\"{{ this.amplifyService.i18n().get('Enter your Code') }}\"\n          data-test=\"${auth.confirmSignIn.codeInput}\"\n        />\n      </div>\n      <div class=\"amplify-form-actions\">\n        <div class=\"amplify-form-cell-left\">\n          <div class=\"amplify-form-actions-left\">\n            <a \n              class=\"amplify-form-link\"\n              (click)=\"onSignIn()\"\n              data-test=\"${auth.confirmSignIn.backToSignInLink}\"\n              >\n                {{ this.amplifyService.i18n().get('Back to Sign in') }}\n            </a>\n          </div>\n        </div>\n        <div class=\"amplify-form-cell-right\">\n          <button\n            class=\"amplify-form-button\"\n            data-test=\"${auth.confirmSignIn.confirmButton}\"\n            (click)=\"onConfirm()\"\n            >\n              {{ this.amplifyService.i18n().get('Confirm') }}</button>\n        </div>\n      </div>\n      </div>\n  </div>\n  <div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n    <div class=\"amplify-alert-body\">\n      <span class=\"amplify-alert-icon\">&#9888;</span>\n      <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n      <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n    </div>\n  </div>\n</div>\n`;\n\n@Component({\n\tselector: 'amplify-auth-confirm-sign-in-core',\n\ttemplate,\n})\nexport class ConfirmSignInComponentCore implements OnInit {\n\t_authState: AuthState;\n\t_show: boolean;\n\tcode: string;\n\terrorMessage: string;\n\tprotected logger: any;\n\n\tconstructor(@Inject(AmplifyService) public amplifyService: AmplifyService) {\n\t\tthis.logger = this.amplifyService.logger('ConfiSignInComponent');\n\t}\n\n\t@Input()\n\tset data(data: any) {\n\t\tthis.hide = data.hide ? data.hide : this.hide;\n\t\tthis._authState = data.authState;\n\t\tthis._show = data.authState.state === 'confirmSignIn';\n\t}\n\n\t@Input()\n\tset authState(authState: AuthState) {\n\t\tthis._authState = authState;\n\t\tthis._show = authState.state === 'confirmSignIn';\n\t}\n\n\t@Input() hide: string[] = [];\n\n\tngOnInit() {\n\t\tif (!this.amplifyService.auth()) {\n\t\t\tthrow new Error('Auth module not registered on AmplifyService provider');\n\t\t}\n\t}\n\n\tshouldHide(comp) {\n\t\treturn this.hide.filter(item => item === comp).length > 0;\n\t}\n\n\tsetCode(code: string) {\n\t\tthis.code = code;\n\t}\n\n\tonConfirm() {\n\t\tconst { user } = this._authState;\n\t\tconst { challengeName } = user;\n\t\tconst mfaType =\n\t\t\tchallengeName === 'SOFTWARE_TOKEN_MFA' ? challengeName : null;\n\t\tthis.amplifyService\n\t\t\t.auth()\n\t\t\t.confirmSignIn(user, this.code, mfaType)\n\t\t\t.then(() => {\n\t\t\t\tthis.onAlertClose();\n\t\t\t\tthis.amplifyService.setAuthState({ state: 'signedIn', user });\n\t\t\t})\n\t\t\t.catch(err => this._setError(err));\n\t}\n\n\tonSignIn() {\n\t\tthis.onAlertClose();\n\t\tthis.amplifyService.setAuthState({ state: 'signIn', user: null });\n\t}\n\n\tonAlertClose() {\n\t\tthis._setError(null);\n\t}\n\n\t_setError(err) {\n\t\tif (!err) {\n\t\t\tthis.errorMessage = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.errorMessage = err.message || err;\n\t}\n}\n"]}