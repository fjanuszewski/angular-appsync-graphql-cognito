import { UsernameAttributes } from '../types';
import { Component, Input, Inject } from '@angular/core';
import { AmplifyService } from '../../../providers/amplify.service';
import { labelMap, composePhoneNumber } from '../common';
import { auth } from '../../../assets/data-test-attributes';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../username-field-component/username-field.component.core';

function ForgotPasswordComponentCore_div_0_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.amplifyService.i18n().get("You will receive a verification code"), " ");
} }
function ForgotPasswordComponentCore_div_0_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.amplifyService.i18n().get("Enter the code you received and set a new password"), " ");
} }
function ForgotPasswordComponentCore_div_0_amplify_auth_username_field_core_7_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "amplify-auth-username-field-core", 18);
    ɵngcc0.ɵɵlistener("usernameFieldChanged", function ForgotPasswordComponentCore_div_0_amplify_auth_username_field_core_7_Template_amplify_auth_username_field_core_usernameFieldChanged_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.onUsernameFieldChanged($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("usernameAttributes", ctx_r3._usernameAttributes);
} }
function ForgotPasswordComponentCore_div_0_div_8_Template(rf, ctx) { if (rf & 1) {
    var _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 19);
    ɵngcc0.ɵɵelementStart(1, "label", 20);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "input", 21, 22);
    ɵngcc0.ɵɵlistener("keyup", function ForgotPasswordComponentCore_div_0_div_8_Template_input_keyup_3_listener() { ɵngcc0.ɵɵrestoreView(_r15); var _r13 = ɵngcc0.ɵɵreference(4); var ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.setCode(_r13.value); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.amplifyService.i18n().get("Confirmation Code *"), " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r4.amplifyService.i18n().get("Enter code"));
} }
function ForgotPasswordComponentCore_div_0_div_9_Template(rf, ctx) { if (rf & 1) {
    var _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 19);
    ɵngcc0.ɵɵelementStart(1, "label", 23);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "input", 24, 25);
    ɵngcc0.ɵɵlistener("keyup", function ForgotPasswordComponentCore_div_0_div_9_Template_input_keyup_3_listener() { ɵngcc0.ɵɵrestoreView(_r18); var _r16 = ɵngcc0.ɵɵreference(4); var ctx_r17 = ɵngcc0.ɵɵnextContext(2); return ctx_r17.setPassword(_r16.value); })("keyup.enter", function ForgotPasswordComponentCore_div_0_div_9_Template_input_keyup_enter_3_listener() { ɵngcc0.ɵɵrestoreView(_r18); var ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.onSubmit(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.amplifyService.i18n().get("New Password *"), " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r5.amplifyService.i18n().get("Password"));
} }
function ForgotPasswordComponentCore_div_0_button_12_Template(rf, ctx) { if (rf & 1) {
    var _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 26);
    ɵngcc0.ɵɵlistener("click", function ForgotPasswordComponentCore_div_0_button_12_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); var ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.onSend(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r6.amplifyService.i18n().get("Submit"), "");
} }
function ForgotPasswordComponentCore_div_0_button_13_Template(rf, ctx) { if (rf & 1) {
    var _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 27);
    ɵngcc0.ɵɵlistener("click", function ForgotPasswordComponentCore_div_0_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); var ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.onSubmit(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r7.amplifyService.i18n().get("Verify"), "");
} }
function ForgotPasswordComponentCore_div_0_a_16_Template(rf, ctx) { if (rf & 1) {
    var _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 28);
    ɵngcc0.ɵɵlistener("click", function ForgotPasswordComponentCore_div_0_a_16_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r25); var ctx_r24 = ɵngcc0.ɵɵnextContext(2); return ctx_r24.onSend(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r8.amplifyService.i18n().get("Resend Code"), " ");
} }
function ForgotPasswordComponentCore_div_0_a_17_Template(rf, ctx) { if (rf & 1) {
    var _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 29);
    ɵngcc0.ɵɵlistener("click", function ForgotPasswordComponentCore_div_0_a_17_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r26 = ɵngcc0.ɵɵnextContext(2); return ctx_r26.onSignIn(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r9.amplifyService.i18n().get("Back to Sign in"), " ");
} }
function ForgotPasswordComponentCore_div_0_div_18_Template(rf, ctx) { if (rf & 1) {
    var _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 30);
    ɵngcc0.ɵɵelementStart(1, "div", 31);
    ɵngcc0.ɵɵelementStart(2, "span", 32);
    ɵngcc0.ɵɵtext(3, "\u26A0");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 33);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "a", 34);
    ɵngcc0.ɵɵlistener("click", function ForgotPasswordComponentCore_div_0_div_18_Template_a_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r29); var ctx_r28 = ɵngcc0.ɵɵnextContext(2); return ctx_r28.onAlertClose(); });
    ɵngcc0.ɵɵtext(7, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ctx_r10.amplifyService.i18n().get(ctx_r10.errorMessage));
} }
function ForgotPasswordComponentCore_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, ForgotPasswordComponentCore_div_0_div_5_Template, 2, 1, "div", 5);
    ɵngcc0.ɵɵtemplate(6, ForgotPasswordComponentCore_div_0_div_6_Template, 2, 1, "div", 5);
    ɵngcc0.ɵɵtemplate(7, ForgotPasswordComponentCore_div_0_amplify_auth_username_field_core_7_Template, 1, 1, "amplify-auth-username-field-core", 6);
    ɵngcc0.ɵɵtemplate(8, ForgotPasswordComponentCore_div_0_div_8_Template, 5, 2, "div", 7);
    ɵngcc0.ɵɵtemplate(9, ForgotPasswordComponentCore_div_0_div_9_Template, 5, 2, "div", 7);
    ɵngcc0.ɵɵelementStart(10, "div", 8);
    ɵngcc0.ɵɵelementStart(11, "div", 9);
    ɵngcc0.ɵɵtemplate(12, ForgotPasswordComponentCore_div_0_button_12_Template, 2, 1, "button", 10);
    ɵngcc0.ɵɵtemplate(13, ForgotPasswordComponentCore_div_0_button_13_Template, 2, 1, "button", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "div", 12);
    ɵngcc0.ɵɵelementStart(15, "div", 13);
    ɵngcc0.ɵɵtemplate(16, ForgotPasswordComponentCore_div_0_a_16_Template, 2, 1, "a", 14);
    ɵngcc0.ɵɵtemplate(17, ForgotPasswordComponentCore_div_0_a_17_Template, 2, 1, "a", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(18, ForgotPasswordComponentCore_div_0_div_18_Template, 8, 1, "div", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.amplifyService.i18n().get("Reset your password"), " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.code_sent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.errorMessage);
} }
var template = "\n<div class=\"amplify-container\" *ngIf=\"_show\">\n  <div class=\"amplify-form-container\" data-test=\"" + auth.forgotPassword.section + "\">\n    <div class=\"amplify-form-body\" data-test=\"" + auth.forgotPassword.bodySection + "\">\n    <div class=\"amplify-form-header\" data-test=\"" + auth.forgotPassword.headerSection + "\">\n      {{ this.amplifyService.i18n().get('Reset your password') }}\n    </div>\n    <div class=\"amplify-form-text\" *ngIf=\"!code_sent\">\n      {{ this.amplifyService.i18n().get('You will receive a verification code') }}\n    </div>\n    <div class=\"amplify-form-text\" *ngIf=\"code_sent\">\n      {{ this.amplifyService.i18n().get('Enter the code you received and set a new password') }}\n    </div>\n    <amplify-auth-username-field-core\n      *ngIf=\"!code_sent\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      (usernameFieldChanged)=\"onUsernameFieldChanged($event)\"\n    ></amplify-auth-username-field-core>\n      <div class=\"amplify-form-row\" *ngIf=\"code_sent\">\n      <label class=\"amplify-input-label\" for=\"code\">\n        {{ this.amplifyService.i18n().get('Confirmation Code *') }}\n      </label>\n      <input #code\n        (keyup)=\"setCode(code.value)\"\n        class=\"amplify-form-input\"\n        type=\"text\"\n        autocomplete=\"off\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Enter code') }}\"\n        data-test=\"" + auth.forgotPassword.codeInput + "\"\n      />\n      </div>\n      <div class=\"amplify-form-row\" *ngIf=\"code_sent\">\n      <label class=\"amplify-input-label\" for=\"password\">\n        {{ this.amplifyService.i18n().get('New Password *') }}\n      </label>\n      <input #password\n        (keyup)=\"setPassword(password.value)\"\n        (keyup.enter)=\"onSubmit()\"\n        class=\"amplify-form-input\"\n        type=\"password\"\n        autocomplete=\"off\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Password') }}\"\n        data-test=\"" + auth.forgotPassword.newPasswordInput + "\"\n      />\n      </div>\n      <div class=\"amplify-form-actions\">\n        <div class=\"amplify-form-cell-right\">\n          <button class=\"amplify-form-button\"\n            *ngIf=\"!code_sent\"\n            (click)=\"onSend()\"\n            data-test=\"" + auth.forgotPassword.sendCodeButton + "\"\n            >\n              {{ this.amplifyService.i18n().get('Submit') }}</button>\n          <button class=\"amplify-form-button\"\n            *ngIf=\"code_sent\"\n            (click)=\"onSubmit()\"\n            data-test=\"" + auth.forgotPassword.submitButton + "\"\n            >\n              {{ this.amplifyService.i18n().get('Verify') }}</button>\n        </div>\n        <div class=\"amplify-form-cell-left\">\n          <div class=\"amplify-form-actions-left\">\n            <a\n              *ngIf=\"code_sent\"\n              class=\"amplify-form-link\"\n              (click)=\"onSend()\"\n              data-test=\"" + auth.forgotPassword.resendCodeLink + "\"\n              >\n              {{ this.amplifyService.i18n().get('Resend Code') }}\n            </a>\n            <a\n              *ngIf=\"!code_sent\"\n              class=\"amplify-form-link\"\n              (click)=\"onSignIn()\"\n              data-test=\"" + auth.forgotPassword.backToSignInLink + "\"\n              >\n              {{ this.amplifyService.i18n().get('Back to Sign in') }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n    <div class=\"amplify-alert-body\">\n      <span class=\"amplify-alert-icon\">&#9888;</span>\n      <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n      <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n    </div>\n  </div>\n</div>\n";
var ForgotPasswordComponentCore = /** @class */ (function () {
    function ForgotPasswordComponentCore(amplifyService) {
        this.amplifyService = amplifyService;
        this._usernameAttributes = 'username';
        this.code_sent = false;
        this.country_code = '1';
        this.hide = [];
        this.logger = this.amplifyService.logger('ForgotPasswordComponent');
    }
    Object.defineProperty(ForgotPasswordComponentCore.prototype, "data", {
        set: function (data) {
            this._authState = data.authState;
            this._show = data.authState.state === 'forgotPassword';
            this._usernameAttributes = data.usernameAttributes;
            this.hide = data.hide ? data.hide : this.hide;
            this.username =
                data.authState.user && data.authState.user.username
                    ? data.authState.user.username
                    : '';
        },
        enumerable: true,
        configurable: true
    });
    ForgotPasswordComponentCore.prototype.shouldHide = function (comp) {
        return this.hide.filter(function (item) { return item === comp; }).length > 0;
    };
    Object.defineProperty(ForgotPasswordComponentCore.prototype, "authState", {
        set: function (authState) {
            this._authState = authState;
            this._show = authState.state === 'forgotPassword';
            this.email =
                authState.user && authState.user.email ? authState.user.email : '';
            this.country_code =
                authState.user && authState.user.contry_code
                    ? authState.user.country_code
                    : '1';
            this.local_phone_number =
                authState.user && authState.user.local_phone_number
                    ? authState.user.local_phone_number
                    : '';
            this.username =
                authState.user && authState.user.username ? authState.user.username : '';
        },
        enumerable: true,
        configurable: true
    });
    ForgotPasswordComponentCore.prototype.ngOnInit = function () {
        if (!this.amplifyService.auth()) {
            throw new Error('Auth module not registered on AmplifyService provider');
        }
    };
    Object.defineProperty(ForgotPasswordComponentCore.prototype, "usernameAttributes", {
        set: function (usernameAttributes) {
            this._usernameAttributes = usernameAttributes;
        },
        enumerable: true,
        configurable: true
    });
    ForgotPasswordComponentCore.prototype.setCode = function (code) {
        this.code = code;
    };
    ForgotPasswordComponentCore.prototype.setPassword = function (password) {
        this.password = password;
    };
    ForgotPasswordComponentCore.prototype.getforgotPwUsername = function () {
        switch (this._usernameAttributes) {
            case UsernameAttributes.EMAIL:
                return this.email;
            case UsernameAttributes.PHONE_NUMBER:
                return composePhoneNumber(this.country_code, this.local_phone_number);
            default:
                return this.username;
        }
    };
    ForgotPasswordComponentCore.prototype.onSend = function () {
        var _this = this;
        var forgotPwUsername = this.getforgotPwUsername();
        if (!forgotPwUsername) {
            this.errorMessage = 'Username cannot be empty';
            return;
        }
        this.amplifyService
            .auth()
            .forgotPassword(forgotPwUsername)
            .then(function () {
            _this.code_sent = true;
        })
            .catch(function (err) {
            _this._setError(err);
            _this.code_sent = false;
        });
    };
    ForgotPasswordComponentCore.prototype.onSubmit = function () {
        var _this = this;
        this.amplifyService
            .auth()
            .forgotPasswordSubmit(this.getforgotPwUsername(), this.code, this.password)
            .then(function () {
            var user = { username: _this.username };
            _this.onAlertClose();
            _this.amplifyService.setAuthState({ state: 'signIn', user: user });
        })
            .catch(function (err) { return _this._setError(err); });
    };
    ForgotPasswordComponentCore.prototype.onSignIn = function () {
        this.onAlertClose();
        this.amplifyService.setAuthState({ state: 'signIn', user: null });
    };
    ForgotPasswordComponentCore.prototype.onAlertClose = function () {
        this._setError(null);
    };
    ForgotPasswordComponentCore.prototype._setError = function (err) {
        if (!err) {
            this.errorMessage = null;
            return;
        }
        this.errorMessage = err.message || err;
    };
    ForgotPasswordComponentCore.prototype.getUsernameLabel = function () {
        return (labelMap[this._usernameAttributes] || this._usernameAttributes);
    };
    ForgotPasswordComponentCore.prototype.onUsernameFieldChanged = function (event) {
        this.email = event.email || this.email;
        this.username = event.username || this.username;
        this.country_code = event.country_code || this.country_code;
        this.local_phone_number =
            event.local_phone_number || this.local_phone_number;
    };
    /** @nocollapse */
    ForgotPasswordComponentCore.ctorParameters = function () { return [
        { type: AmplifyService, decorators: [{ type: Inject, args: [AmplifyService,] },] },
    ]; };
    ForgotPasswordComponentCore.propDecorators = {
        "data": [{ type: Input },],
        "hide": [{ type: Input },],
        "authState": [{ type: Input },],
        "usernameAttributes": [{ type: Input },],
    };
ForgotPasswordComponentCore.ɵfac = function ForgotPasswordComponentCore_Factory(t) { return new (t || ForgotPasswordComponentCore)(ɵngcc0.ɵɵdirectiveInject(AmplifyService)); };
ForgotPasswordComponentCore.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ForgotPasswordComponentCore, selectors: [["amplify-auth-forgot-password-core"]], inputs: { hide: "hide", data: "data", authState: "authState", usernameAttributes: "usernameAttributes" }, decls: 1, vars: 1, consts: [["class", "amplify-container", 4, "ngIf"], [1, "amplify-container"], ["data-test", "forgot-password-section", 1, "amplify-form-container"], ["data-test", "forgot-password-body-section", 1, "amplify-form-body"], ["data-test", "forgot-password-header-section", 1, "amplify-form-header"], ["class", "amplify-form-text", 4, "ngIf"], [3, "usernameAttributes", "usernameFieldChanged", 4, "ngIf"], ["class", "amplify-form-row", 4, "ngIf"], [1, "amplify-form-actions"], [1, "amplify-form-cell-right"], ["class", "amplify-form-button", "data-test", "forgot-password-send-code-button", 3, "click", 4, "ngIf"], ["class", "amplify-form-button", "data-test", "forgot-password-submit-button", 3, "click", 4, "ngIf"], [1, "amplify-form-cell-left"], [1, "amplify-form-actions-left"], ["class", "amplify-form-link", "data-test", "forgot-password-resend-code-link", 3, "click", 4, "ngIf"], ["class", "amplify-form-link", "data-test", "forgot-password-back-to-sign-in-link", 3, "click", 4, "ngIf"], ["class", "amplify-alert", 4, "ngIf"], [1, "amplify-form-text"], [3, "usernameAttributes", "usernameFieldChanged"], [1, "amplify-form-row"], ["for", "code", 1, "amplify-input-label"], ["type", "text", "autocomplete", "off", "data-test", "forgot-password-code-input", 1, "amplify-form-input", 3, "placeholder", "keyup"], ["code", ""], ["for", "password", 1, "amplify-input-label"], ["type", "password", "autocomplete", "off", "data-test", "forgot-password-new-password-input", 1, "amplify-form-input", 3, "placeholder", "keyup", "keyup.enter"], ["password", ""], ["data-test", "forgot-password-send-code-button", 1, "amplify-form-button", 3, "click"], ["data-test", "forgot-password-submit-button", 1, "amplify-form-button", 3, "click"], ["data-test", "forgot-password-resend-code-link", 1, "amplify-form-link", 3, "click"], ["data-test", "forgot-password-back-to-sign-in-link", 1, "amplify-form-link", 3, "click"], [1, "amplify-alert"], [1, "amplify-alert-body"], [1, "amplify-alert-icon"], [1, "amplify-alert-message"], [1, "amplify-alert-close", 3, "click"]], template: function ForgotPasswordComponentCore_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ForgotPasswordComponentCore_div_0_Template, 19, 11, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx._show);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.UsernameFieldComponentCore], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ForgotPasswordComponentCore, [{
        type: Component,
        args: [{
                selector: 'amplify-auth-forgot-password-core',
                template: template
            }]
    }], function () { return [{ type: AmplifyService, decorators: [{
                type: Inject,
                args: [AmplifyService]
            }] }]; }, { hide: [{
            type: Input
        }], data: [{
            type: Input
        }], authState: [{
            type: Input
        }], usernameAttributes: [{
            type: Input
        }] }); })();
    return ForgotPasswordComponentCore;
}());
export { ForgotPasswordComponentCore };

//# sourceMappingURL=forgot-password.component.core.js.map