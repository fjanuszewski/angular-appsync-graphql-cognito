import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../phone-field-component/phone-field.component.core';

function UsernameFieldComponentCore_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "label", 2);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "input", 3, 4);
    ɵngcc0.ɵɵlistener("keyup", function UsernameFieldComponentCore_div_1_Template_input_keyup_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.setEmail($event.target.value); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.amplifyService.i18n().get("Email"), " *");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r0.amplifyService.i18n().get(ctx_r0.getPlaceholder()));
} }
function UsernameFieldComponentCore_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "amplify-auth-phone-field-core", 5);
    ɵngcc0.ɵɵlistener("phoneFieldChanged", function UsernameFieldComponentCore_div_2_Template_amplify_auth_phone_field_core_phoneFieldChanged_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onPhoneFieldChanged($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function UsernameFieldComponentCore_div_3_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "label", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "input", 7, 8);
    ɵngcc0.ɵɵlistener("keyup", function UsernameFieldComponentCore_div_3_Template_input_keyup_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.setUsername($event.target.value); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.amplifyService.i18n().get(ctx_r2.getUsernameLabel()), " *");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r2.username);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r2.amplifyService.i18n().get(ctx_r2.getPlaceholder()));
} }
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
// tslint:disable
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
// tslint:enable
import { Component, Input, EventEmitter, Inject, Output, } from '@angular/core';
import { labelMap } from '../common';
import { UsernameAttributes, } from '../types';
import { AmplifyService } from '../../../providers/amplify.service';
import { auth } from '../../../assets/data-test-attributes';
var template = "\n<div class=\"amplify-amplify-form-row amplify-signin-username\">\n    <div *ngIf=\"this._usernameAttributes === 'email'\">\n        <label class=\"amplify-input-label\" for=\"emailField\"> {{ this.amplifyService.i18n().get('Email') }} *</label>\n        <input\n            #emailField\n            class=\"amplify-form-input\"\n            type=\"email\"\n            placeholder=\"{{ this.amplifyService.i18n().get(this.getPlaceholder()) }}\"\n            (keyup)=\"setEmail($event.target.value)\"\n            data-test=\"" + auth.genericAttrs.emailInput + "\"\n        />\n    </div>\n    <div *ngIf=\"this._usernameAttributes === 'phone_number'\">\n        <amplify-auth-phone-field-core\n            (phoneFieldChanged)=\"onPhoneFieldChanged($event)\"\n        ></amplify-auth-phone-field-core>\n    </div>\n    <div *ngIf=\"this._usernameAttributes !== 'email' && this._usernameAttributes !== 'phone_number'\">\n        <label class=\"amplify-input-label\" for=\"usernameField\"> {{ this.amplifyService.i18n().get(getUsernameLabel()) }} *</label>\n        <input\n            #usernameField\n            class=\"amplify-form-input\"\n            type=\"text\"\n            value=\"{{this.username}}\"\n            placeholder=\"{{ this.amplifyService.i18n().get(this.getPlaceholder()) }}\"\n            (keyup)=\"setUsername($event.target.value)\"\n            data-test=\"" + auth.genericAttrs.usernameInput + "\"\n        />\n    </div>\n</div>\n";
var UsernameFieldComponentCore = /** @class */ (function () {
    function UsernameFieldComponentCore(amplifyService) {
        this.amplifyService = amplifyService;
        this._usernameAttributes = UsernameAttributes.USERNAME;
        this._placeholder = '';
        this.usernameFieldChanged = new EventEmitter();
        this.onPhoneFieldChanged = this.onPhoneFieldChanged.bind(this);
    }
    Object.defineProperty(UsernameFieldComponentCore.prototype, "data", {
        set: function (data) {
            this._usernameAttributes = data.usernameAttributes;
            this._placeholder = data.placeholder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UsernameFieldComponentCore.prototype, "usernameAttributes", {
        set: function (usernameAttributes) {
            this._usernameAttributes = usernameAttributes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UsernameFieldComponentCore.prototype, "placeholder", {
        set: function (placeholder) {
            this._placeholder = placeholder;
        },
        enumerable: true,
        configurable: true
    });
    UsernameFieldComponentCore.prototype.ngOnInit = function () {
        if (window &&
            window.location &&
            window.location.search &&
            this._usernameAttributes !== 'email' &&
            this._usernameAttributes !== 'phone_number') {
            var searchParams = new URLSearchParams(window.location.search);
            var username = searchParams ? searchParams.get('username') : undefined;
            this.setUsername(username);
            this.username = username;
        }
    };
    UsernameFieldComponentCore.prototype.ngOnDestroy = function () { };
    UsernameFieldComponentCore.prototype.setUsername = function (username) {
        this.usernameFieldChanged.emit({
            username: username,
        });
    };
    UsernameFieldComponentCore.prototype.setEmail = function (email) {
        this.usernameFieldChanged.emit({
            email: email,
        });
    };
    UsernameFieldComponentCore.prototype.getUsernameLabel = function () {
        return (labelMap[this._usernameAttributes] || this._usernameAttributes);
    };
    UsernameFieldComponentCore.prototype.getPlaceholder = function () {
        return this.amplifyService
            .i18n()
            .get("" + this.getUsernameLabel() || this._placeholder);
    };
    UsernameFieldComponentCore.prototype.onPhoneFieldChanged = function (event) {
        this.usernameFieldChanged.emit(__assign({}, event));
    };
    /** @nocollapse */
    UsernameFieldComponentCore.ctorParameters = function () { return [
        { type: AmplifyService, decorators: [{ type: Inject, args: [AmplifyService,] },] },
    ]; };
    UsernameFieldComponentCore.propDecorators = {
        "data": [{ type: Input },],
        "usernameAttributes": [{ type: Input },],
        "placeholder": [{ type: Input },],
        "usernameFieldChanged": [{ type: Output },],
    };
UsernameFieldComponentCore.ɵfac = function UsernameFieldComponentCore_Factory(t) { return new (t || UsernameFieldComponentCore)(ɵngcc0.ɵɵdirectiveInject(AmplifyService)); };
UsernameFieldComponentCore.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: UsernameFieldComponentCore, selectors: [["amplify-auth-username-field-core"]], inputs: { data: "data", usernameAttributes: "usernameAttributes", placeholder: "placeholder" }, outputs: { usernameFieldChanged: "usernameFieldChanged" }, decls: 4, vars: 3, consts: [[1, "amplify-amplify-form-row", "amplify-signin-username"], [4, "ngIf"], ["for", "emailField", 1, "amplify-input-label"], ["type", "email", "data-test", "email-input", 1, "amplify-form-input", 3, "placeholder", "keyup"], ["emailField", ""], [3, "phoneFieldChanged"], ["for", "usernameField", 1, "amplify-input-label"], ["type", "text", "data-test", "username-input", 1, "amplify-form-input", 3, "value", "placeholder", "keyup"], ["usernameField", ""]], template: function UsernameFieldComponentCore_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, UsernameFieldComponentCore_div_1_Template, 5, 2, "div", 1);
        ɵngcc0.ɵɵtemplate(2, UsernameFieldComponentCore_div_2_Template, 2, 0, "div", 1);
        ɵngcc0.ɵɵtemplate(3, UsernameFieldComponentCore_div_3_Template, 5, 3, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._usernameAttributes === "email");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._usernameAttributes === "phone_number");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._usernameAttributes !== "email" && ctx._usernameAttributes !== "phone_number");
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.PhoneFieldComponentCore], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UsernameFieldComponentCore, [{
        type: Component,
        args: [{
                selector: 'amplify-auth-username-field-core',
                template: template
            }]
    }], function () { return [{ type: AmplifyService, decorators: [{
                type: Inject,
                args: [AmplifyService]
            }] }]; }, { usernameFieldChanged: [{
            type: Output
        }], data: [{
            type: Input
        }], usernameAttributes: [{
            type: Input
        }], placeholder: [{
            type: Input
        }] }); })();
    return UsernameFieldComponentCore;
}());
export { UsernameFieldComponentCore };

//# sourceMappingURL=username-field.component.core.js.map