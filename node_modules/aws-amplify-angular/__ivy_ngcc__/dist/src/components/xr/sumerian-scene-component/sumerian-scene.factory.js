import { Component, Input, ViewChild, ComponentFactoryResolver, } from '@angular/core';
import { DynamicComponentDirective } from '../../../directives/dynamic.component.directive';
import { ComponentMount } from '../../component.mount';
import { SumerianSceneComponentCore } from './sumerian-scene.component.core';
import { SumerianSceneComponentIonic } from './sumerian-scene.component.ionic';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../directives/dynamic.component.directive';

function SumerianSceneComponent_ng_template_0_Template(rf, ctx) { }
var SumerianSceneComponent = /** @class */ (function () {
    function SumerianSceneComponent(componentFactoryResolver) {
        this.componentFactoryResolver = componentFactoryResolver;
    }
    SumerianSceneComponent.prototype.ngOnInit = function () {
        this.loadComponent();
    };
    SumerianSceneComponent.prototype.ngOnDestroy = function () { };
    SumerianSceneComponent.prototype.loadComponent = function () {
        var sumerianScene = this.framework && this.framework.toLowerCase() === 'ionic'
            ? new ComponentMount(SumerianSceneComponentIonic, {
                sceneName: this.sceneName,
            })
            : new ComponentMount(SumerianSceneComponentCore, {
                sceneName: this.sceneName,
            });
        var componentFactory = this.componentFactoryResolver.resolveComponentFactory(sumerianScene.component);
        var viewContainerRef = this.componentHost.viewContainerRef;
        viewContainerRef.clear();
        var componentRef = viewContainerRef.createComponent(componentFactory);
        componentRef.instance.data = sumerianScene.data;
    };
    /** @nocollapse */
    SumerianSceneComponent.ctorParameters = function () { return [
        { type: ComponentFactoryResolver, },
    ]; };
    SumerianSceneComponent.propDecorators = {
        "framework": [{ type: Input },],
        "sceneName": [{ type: Input },],
        "componentHost": [{ type: ViewChild, args: [DynamicComponentDirective,] },],
    };
SumerianSceneComponent.ɵfac = function SumerianSceneComponent_Factory(t) { return new (t || SumerianSceneComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };
SumerianSceneComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SumerianSceneComponent, selectors: [["amplify-sumerian-scene"]], viewQuery: function SumerianSceneComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(DynamicComponentDirective, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.componentHost = _t.first);
    } }, inputs: { framework: "framework", sceneName: "sceneName" }, decls: 1, vars: 0, consts: [["component-host", ""]], template: function SumerianSceneComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SumerianSceneComponent_ng_template_0_Template, 0, 0, "ng-template", 0);
    } }, directives: [ɵngcc1.DynamicComponentDirective], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SumerianSceneComponent, [{
        type: Component,
        args: [{
                selector: 'amplify-sumerian-scene',
                template: "\n\t\t<ng-template component-host></ng-template>\n\t"
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }]; }, { framework: [{
            type: Input
        }], sceneName: [{
            type: Input
        }], componentHost: [{
            type: ViewChild,
            args: [DynamicComponentDirective]
        }] }); })();
    return SumerianSceneComponent;
}());
export { SumerianSceneComponent };

//# sourceMappingURL=sumerian-scene.factory.js.map