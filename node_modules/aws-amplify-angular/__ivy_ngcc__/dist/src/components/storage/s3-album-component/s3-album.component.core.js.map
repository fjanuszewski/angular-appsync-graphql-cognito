{"version":3,"file":"s3-album.component.core.js","sources":["../../../../../src/components/storage/s3-album-component/s3-album.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAU,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;;;;;;;;;;;;;;;;AAEpE,IAAM,QAAQ,GAAG,iVAYhB,CAAC;AACF;AAGM,IAWL,8BAAmB,cAA8B;AAClD,QADoB,mBAAc,GAAd,cAAc,CAAgB;AAAC,wBANlC,EAAE;AACnB,wBAGkC,IAAI,YAAY,EAAU;AAC5D,QAEE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAC/D,KAAE;AACF,IACC,uCAAQ,GAAR;AACA,QAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE;AACtC,YAAG,MAAM,IAAI,KAAK,CACd,0DAA0D,CAC1D,CAAC;AACL,SAAG;AACH,QAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,KAAE;AAEF,IAAC,8CAAe,GAAf,UAAgB,KAAK;AACtB,QAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,KAAE;AAEF,0BAAc,sCAAI;AAAI,uBAAH,IAAS;AAC5B,YAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AAClB,gBAAG,OAAO;AACV,aAAG;AACH,YAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,YAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;AAC/B;AAEO;AAA0B;AAIjC;AAAQ,0BAJM,sCAAI;AAAI,uBAAH,IAAY;AAC/B,YAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB;AAEO;AAA0B;AACX;AAEtB,0BAHc,yCAAO;AAAI,uBAAH,OAAY;AAClC,YAAE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC1B;AAEO;AACA;AAGH;AAAQ,IAJX,sCAAO,GAAP,UAAQ,IAAI,EAAE,OAAO;AACtB,QADC,iBAaC;AACF,QAbE,IAAI,CAAC,IAAI,EAAE;AACb,YAAG,OAAO;AACV,SAAG;AACH,QAAE,IAAI,CAAC,cAAc;AACrB,aAAI,OAAO,EAAE;AACb,aAAI,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACvB,aAAI,IAAI,CAAC,UAAA,IAAI;AAAI,YACb,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,IAAI;AAAI,gBAC5B,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AAC/B,aAAK,CAAC,CAAC;AACP,SAAI,CAAC;AACL,aAAI,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;AACjC,KAAE,CAvDQ;AAAC;iCAJV,SAAS,SAAC,nDAIuB;QAHjC,QAAQ,EAAE,lBAMJ,gBAvBE,cAAc;MAiBW,NAjBN;kBAkB3B,QAAQ,UAAA,pCAlB6B;WAmBrC,XAjBW,6BAwBV,MAAM;AACL,yBAmBD,KAAK;AAAM,yBAQX,KAAK;AAAM,4BAIX,KAAK;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AAAC,+BA1EpB;AAAE;AAAM,SAoCK,oBAAoB;AAAI","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\n\nconst template = `\n<div class=\"amplify-album\">\n  <div class=\"amplify-album-container\">\n    <amplify-s3-image-core\n      class=\"amplify-image-container\"\n      *ngFor=\"let item of list\"\n      path=\"{{item.path}}\"\n      [options]=\"_options\"\n      (selected)=\"onImageSelected($event)\"\n    ></amplify-s3-image-core>\n  </div>\n</div>\n`;\n\n@Component({\n\tselector: 'amplify-s3-album-core',\n\ttemplate,\n})\nexport class S3AlbumComponentCore implements OnInit {\n\tlist: Array<Object>;\n\t_path: string;\n\t_options: any = {};\n\tprotected logger: any;\n\n\t@Output()\n\tselected: EventEmitter<string> = new EventEmitter<string>();\n\n\tconstructor(public amplifyService: AmplifyService) {\n\t\tthis.logger = this.amplifyService.logger('S3AlbumComponent');\n\t}\n\n\tngOnInit() {\n\t\tif (!this.amplifyService.storage()) {\n\t\t\tthrow new Error(\n\t\t\t\t'Storage module not registered on AmplifyService provider'\n\t\t\t);\n\t\t}\n\t\tthis.getList(this._path, this._options);\n\t}\n\n\tonImageSelected(event) {\n\t\tthis.selected.emit(event);\n\t}\n\n\t@Input() set data(data: any) {\n\t\tif (!data.path) {\n\t\t\treturn;\n\t\t}\n\t\tthis._path = data.path;\n\t\tthis._options = data.options;\n\t}\n\n\t@Input() set path(path: string) {\n\t\tthis._path = path;\n\t}\n\n\t@Input() set options(options: any) {\n\t\tthis._options = options;\n\t}\n\n\tgetList(path, options) {\n\t\tif (!path) {\n\t\t\treturn;\n\t\t}\n\t\tthis.amplifyService\n\t\t\t.storage()\n\t\t\t.list(path, options)\n\t\t\t.then(data => {\n\t\t\t\tthis.list = data.map(item => {\n\t\t\t\t\treturn { path: item.key };\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => console.error(e));\n\t}\n}\n"]}