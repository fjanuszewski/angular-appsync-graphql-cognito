// tslint:disable
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
// tslint:enable
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { AmplifyService } from '../../../providers/amplify.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../s3-image-component/s3-image.component.core';

function S3AlbumComponentCore_amplify_s3_image_core_2_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "amplify-s3-image-core", 3);
    ɵngcc0.ɵɵlistener("selected", function S3AlbumComponentCore_amplify_s3_image_core_2_Template_amplify_s3_image_core_selected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onImageSelected($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("path", item_r1.path);
    ɵngcc0.ɵɵproperty("options", ctx_r0._options);
} }
var template = "\n<div class=\"amplify-album\">\n  <div class=\"amplify-album-container\">\n    <amplify-s3-image-core\n      class=\"amplify-image-container\"\n      *ngFor=\"let item of list\"\n      path=\"{{item.path}}\"\n      [options]=\"_options\"\n      (selected)=\"onImageSelected($event)\"\n    ></amplify-s3-image-core>\n  </div>\n</div>\n";
var S3AlbumComponentCore = /** @class */ (function () {
    function S3AlbumComponentCore(amplifyService) {
        this.amplifyService = amplifyService;
        this._options = {};
        this.selected = new EventEmitter();
        this.logger = this.amplifyService.logger('S3AlbumComponent');
    }
    S3AlbumComponentCore.prototype.ngOnInit = function () {
        if (!this.amplifyService.storage()) {
            throw new Error('Storage module not registered on AmplifyService provider');
        }
        this.getList(this._path, this._options);
    };
    S3AlbumComponentCore.prototype.onImageSelected = function (event) {
        this.selected.emit(event);
    };
    Object.defineProperty(S3AlbumComponentCore.prototype, "data", {
        set: function (data) {
            if (!data.path) {
                return;
            }
            this._path = data.path;
            this._options = data.options;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(S3AlbumComponentCore.prototype, "path", {
        set: function (path) {
            this._path = path;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(S3AlbumComponentCore.prototype, "options", {
        set: function (options) {
            this._options = options;
        },
        enumerable: true,
        configurable: true
    });
    S3AlbumComponentCore.prototype.getList = function (path, options) {
        var _this = this;
        if (!path) {
            return;
        }
        this.amplifyService
            .storage()
            .list(path, options)
            .then(function (data) {
            _this.list = data.map(function (item) {
                return { path: item.key };
            });
        })
            .catch(function (e) { return console.error(e); });
    };
    /** @nocollapse */
    S3AlbumComponentCore.ctorParameters = function () { return [
        { type: AmplifyService, },
    ]; };
    S3AlbumComponentCore.propDecorators = {
        "selected": [{ type: Output },],
        "data": [{ type: Input },],
        "path": [{ type: Input },],
        "options": [{ type: Input },],
    };
S3AlbumComponentCore.ɵfac = function S3AlbumComponentCore_Factory(t) { return new (t || S3AlbumComponentCore)(ɵngcc0.ɵɵdirectiveInject(AmplifyService)); };
S3AlbumComponentCore.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: S3AlbumComponentCore, selectors: [["amplify-s3-album-core"]], inputs: { data: "data", path: "path", options: "options" }, outputs: { selected: "selected" }, decls: 3, vars: 1, consts: [[1, "amplify-album"], [1, "amplify-album-container"], ["class", "amplify-image-container", 3, "path", "options", "selected", 4, "ngFor", "ngForOf"], [1, "amplify-image-container", 3, "path", "options", "selected"]], template: function S3AlbumComponentCore_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, S3AlbumComponentCore_amplify_s3_image_core_2_Template, 1, 2, "amplify-s3-image-core", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.list);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.S3ImageComponentCore], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(S3AlbumComponentCore, [{
        type: Component,
        args: [{
                selector: 'amplify-s3-album-core',
                template: template
            }]
    }], function () { return [{ type: AmplifyService }]; }, { selected: [{
            type: Output
        }], data: [{
            type: Input
        }], path: [{
            type: Input
        }], options: [{
            type: Input
        }] }); })();
    return S3AlbumComponentCore;
}());
export { S3AlbumComponentCore };

//# sourceMappingURL=s3-album.component.core.js.map